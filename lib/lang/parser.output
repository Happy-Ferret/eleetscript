state 5 contains 1 shift/reduce conflicts
state 27 contains 1 shift/reduce conflicts
state 31 contains 2 shift/reduce conflicts
state 76 contains 48 shift/reduce conflicts
state 124 contains 1 shift/reduce conflicts
state 133 contains 1 shift/reduce conflicts
state 149 contains 1 shift/reduce conflicts
state 151 contains 18 shift/reduce conflicts
state 152 contains 3 shift/reduce conflicts
state 153 contains 3 shift/reduce conflicts
state 156 contains 1 shift/reduce conflicts
state 161 contains 18 shift/reduce conflicts
state 162 contains 1 shift/reduce conflicts
state 163 contains 1 shift/reduce conflicts
state 167 contains 18 shift/reduce conflicts
state 168 contains 2 shift/reduce conflicts
state 170 contains 1 reduce/reduce conflicts
state 172 contains 3 shift/reduce conflicts
state 173 contains 3 shift/reduce conflicts
state 174 contains 3 shift/reduce conflicts
state 175 contains 3 shift/reduce conflicts
state 176 contains 3 shift/reduce conflicts
state 177 contains 3 shift/reduce conflicts
state 178 contains 3 shift/reduce conflicts
state 179 contains 3 shift/reduce conflicts
state 180 contains 3 shift/reduce conflicts
state 181 contains 3 shift/reduce conflicts
state 182 contains 3 shift/reduce conflicts
state 183 contains 3 shift/reduce conflicts
state 184 contains 3 shift/reduce conflicts
state 185 contains 3 shift/reduce conflicts
state 186 contains 18 shift/reduce conflicts
state 188 contains 18 shift/reduce conflicts
state 189 contains 3 shift/reduce conflicts
state 190 contains 3 shift/reduce conflicts
state 191 contains 3 shift/reduce conflicts
state 192 contains 3 shift/reduce conflicts
state 193 contains 3 shift/reduce conflicts
state 194 contains 3 shift/reduce conflicts
state 196 contains 3 shift/reduce conflicts
state 197 contains 3 shift/reduce conflicts
state 198 contains 3 shift/reduce conflicts
state 199 contains 3 shift/reduce conflicts
state 200 contains 3 shift/reduce conflicts
state 201 contains 3 shift/reduce conflicts
state 202 contains 3 shift/reduce conflicts
state 203 contains 3 shift/reduce conflicts
state 204 contains 3 shift/reduce conflicts
state 205 contains 3 shift/reduce conflicts
state 206 contains 3 shift/reduce conflicts
state 207 contains 3 shift/reduce conflicts
state 208 contains 3 shift/reduce conflicts
state 209 contains 3 shift/reduce conflicts
state 213 contains 3 shift/reduce conflicts
state 214 contains 3 shift/reduce conflicts
state 215 contains 3 shift/reduce conflicts
state 216 contains 3 shift/reduce conflicts
state 217 contains 3 shift/reduce conflicts
state 218 contains 3 shift/reduce conflicts
state 219 contains 3 shift/reduce conflicts
state 224 contains 3 shift/reduce conflicts
state 225 contains 3 shift/reduce conflicts
state 226 contains 3 shift/reduce conflicts
state 227 contains 3 shift/reduce conflicts
state 228 contains 3 shift/reduce conflicts
state 229 contains 3 shift/reduce conflicts
state 230 contains 1 shift/reduce conflicts
state 231 contains 3 shift/reduce conflicts
state 248 contains 1 shift/reduce conflicts
state 251 contains 2 shift/reduce conflicts
state 260 contains 1 shift/reduce conflicts
state 272 contains 1 shift/reduce conflicts
state 291 contains 3 shift/reduce conflicts
state 294 contains 1 shift/reduce conflicts
state 305 contains 2 shift/reduce conflicts
state 313 contains 3 shift/reduce conflicts
state 324 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 Program: 
rule 2 Program: Expressions EOF
rule 3 Expressions: Expression
rule 4 Expressions: Expressions Terminator Expression
rule 5 Expressions: Expressions Terminator
rule 6 Expressions: Terminator
rule 7 Terminator: TERMINATOR Terminator
rule 8 Terminator: TERMINATOR
rule 9 Expression: Literal
rule 10 Expression: AssignmentFunction
rule 11 Expression: Call
rule 12 Expression: SELF
rule 13 Expression: NEXT
rule 14 Expression: KeyValExpression
rule 15 Expression: ListExpression
rule 16 Expression: NamespaceAccess
rule 17 Expression: Defined
rule 18 Expression: DefMethod
rule 19 Expression: Operation
rule 20 Expression: SetVariable
rule 21 Expression: GetVariable
rule 22 Expression: Namespace
rule 23 Expression: Class
rule 24 Expression: If
rule 25 Expression: While
rule 26 Expression: Return
rule 27 Expression: Property
rule 28 Expression: Lambda
rule 29 Expression: "(" Expression ")"
rule 30 GetVariable: CONSTANT
rule 31 GetVariable: GLOBAL
rule 32 GetVariable: CLASS_IDENTIFIER
rule 33 GetVariable: INSTANCE_IDENTIFIER
rule 34 GetVariable: IDENTIFIER
rule 35 Literal: NUMBER
rule 36 Literal: FLOAT
rule 37 Literal: STRING
rule 38 Literal: True
rule 39 Literal: False
rule 40 Literal: NIL
rule 41 Literal: Regex
rule 42 Literal: SYMBOL
rule 43 Regex: REGEX REGEX_FLAGS
rule 44 Regex: REGEX
rule 45 ListExpression: List
rule 46 ListExpression: Expression "[" Expression "]" "=" Expression
rule 47 ListExpression: Expression "[" Expression "]"
rule 48 List: "[" "]"
rule 49 List: "[" Terminator ExpressionList "]"
rule 50 List: "[" Terminator ExpressionList Terminator "]"
rule 51 List: "[" ExpressionList "]"
rule 52 ExpressionList: Expression
rule 53 ExpressionList: ExpressionList "," Terminator Expression
rule 54 ExpressionList: ExpressionList Terminator "," Expression
rule 55 ExpressionList: ExpressionList "," Expression
rule 56 KeyValExpression: Expression "=>" Expression
rule 57 True: TRUE
rule 58 True: YES
rule 59 True: ON
rule 60 False: FALSE
rule 61 False: NO
rule 62 False: OFF
rule 63 AssignmentFunction: Expression "." IDENTIFIER "=" Expression
rule 64 Call: IDENTIFIER Lambda
rule 65 Call: IDENTIFIER Arguments Lambda
rule 66 Call: IDENTIFIER Arguments
rule 67 Call: Expression "." IDENTIFIER Arguments Lambda
rule 68 Call: Expression "." IDENTIFIER Arguments
rule 69 Call: Expression "." IDENTIFIER Lambda
rule 70 Call: Expression "." IDENTIFIER
rule 71 Call: Expression "." Operator Arguments
rule 72 Call: Expression "." "not"
rule 73 Arguments: "(" ")"
rule 74 Arguments: "(" ArgList ")"
rule 75 ArgList: Expression
rule 76 ArgList: ArgList "," Expression
rule 77 Lambda: "->" "{" "}"
rule 78 Lambda: "->" "{" Terminator "}"
rule 79 Lambda: "->" "{" Parameters Expressions "}"
rule 80 Defined: DEFINED "(" GetVariable ")"
rule 81 NamespaceAccess: CONSTANT "::" Expression
rule 82 NamespaceAccess: "::" Expression
rule 83 Operation: Expression "+" Expression
rule 84 Operation: Expression "-" Expression
rule 85 Operation: "-" Expression
rule 86 Operation: Expression "*" Expression
rule 87 Operation: Expression "**" Expression
rule 88 Operation: Expression "/" Expression
rule 89 Operation: Expression "%" Expression
rule 90 Operation: Expression ">" Expression
rule 91 Operation: Expression ">=" Expression
rule 92 Operation: Expression "<" Expression
rule 93 Operation: Expression "<=" Expression
rule 94 Operation: OperatorAssignment
rule 95 Operation: "not" Expression
rule 96 Operation: Expression "and" Expression
rule 97 Operation: Expression "or" Expression
rule 98 Operation: Expression "is" Expression
rule 99 Operation: Expression "isnt" Expression
rule 100 Operation: Expression "=~" Expression
rule 101 OperatorAssignment: CONSTANT "+=" Expression
rule 102 OperatorAssignment: GLOBAL "+=" Expression
rule 103 OperatorAssignment: CLASS_IDENTIFIER "+=" Expression
rule 104 OperatorAssignment: INSTANCE_IDENTIFIER "+=" Expression
rule 105 OperatorAssignment: IDENTIFIER "+=" Expression
rule 106 OperatorAssignment: CONSTANT "-=" Expression
rule 107 OperatorAssignment: GLOBAL "-=" Expression
rule 108 OperatorAssignment: CLASS_IDENTIFIER "-=" Expression
rule 109 OperatorAssignment: INSTANCE_IDENTIFIER "-=" Expression
rule 110 OperatorAssignment: IDENTIFIER "-=" Expression
rule 111 OperatorAssignment: CONSTANT "*=" Expression
rule 112 OperatorAssignment: GLOBAL "*=" Expression
rule 113 OperatorAssignment: CLASS_IDENTIFIER "*=" Expression
rule 114 OperatorAssignment: INSTANCE_IDENTIFIER "*=" Expression
rule 115 OperatorAssignment: IDENTIFIER "*=" Expression
rule 116 OperatorAssignment: CONSTANT "/=" Expression
rule 117 OperatorAssignment: GLOBAL "/=" Expression
rule 118 OperatorAssignment: CLASS_IDENTIFIER "/=" Expression
rule 119 OperatorAssignment: INSTANCE_IDENTIFIER "/=" Expression
rule 120 OperatorAssignment: IDENTIFIER "/=" Expression
rule 121 OperatorAssignment: CONSTANT "%=" Expression
rule 122 OperatorAssignment: GLOBAL "%=" Expression
rule 123 OperatorAssignment: CLASS_IDENTIFIER "%=" Expression
rule 124 OperatorAssignment: INSTANCE_IDENTIFIER "%=" Expression
rule 125 OperatorAssignment: IDENTIFIER "%=" Expression
rule 126 OperatorAssignment: CONSTANT "**=" Expression
rule 127 OperatorAssignment: GLOBAL "**=" Expression
rule 128 OperatorAssignment: CLASS_IDENTIFIER "**=" Expression
rule 129 OperatorAssignment: INSTANCE_IDENTIFIER "**=" Expression
rule 130 OperatorAssignment: IDENTIFIER "**=" Expression
rule 131 OperatorAssignment: IDENTIFIER ".=" IDENTIFIER Arguments Lambda
rule 132 OperatorAssignment: IDENTIFIER ".=" IDENTIFIER Arguments
rule 133 OperatorAssignment: IDENTIFIER ".=" IDENTIFIER
rule 134 SetVariable: CONSTANT "=" Literal
rule 135 SetVariable: GLOBAL "=" Expression
rule 136 SetVariable: CLASS_IDENTIFIER "=" Expression
rule 137 SetVariable: INSTANCE_IDENTIFIER "=" Expression
rule 138 SetVariable: IDENTIFIER "=" Expression
rule 139 DefMethod: IDENTIFIER MethodBlock
rule 140 DefMethod: CLASS_IDENTIFIER MethodBlock
rule 141 DefMethod: Operator MethodBlock
rule 142 DefMethod: "[" "]" "=" MethodBlock
rule 143 DefMethod: "[" "]" MethodBlock
rule 144 MethodBlock: DO Parameters Expressions END
rule 145 MethodBlock: DO Parameters END
rule 146 Operator: "+"
rule 147 Operator: "-"
rule 148 Operator: "*"
rule 149 Operator: "/"
rule 150 Operator: "%"
rule 151 Operator: "**"
rule 152 Operator: "[]"
rule 153 Operator: "[]="
rule 154 Operator: "and"
rule 155 Operator: "or"
rule 156 Operator: "not"
rule 157 Operator: "is"
rule 158 Operator: "isnt"
rule 159 Operator: ">"
rule 160 Operator: ">="
rule 161 Operator: "<="
rule 162 Operator: "<"
rule 163 Operator: "=~"
rule 164 Parameters: 
rule 165 Parameters: Terminator
rule 166 Parameters: "|" ParamList "|" Terminator
rule 167 Parameters: "|" ParamList "|"
rule 168 ParamList: Parameter
rule 169 ParamList: ParamList "," Parameter
rule 170 Parameter: IDENTIFIER
rule 171 Parameter: INSTANCE_IDENTIFIER
rule 172 Parameter: CLASS_IDENTIFIER
rule 173 Namespace: NAMESPACE CONSTANT Expressions END
rule 174 Namespace: NAMESPACE CONSTANT Terminator Expressions END
rule 175 Namespace: NAMESPACE CONSTANT END
rule 176 Class: CLASS ClassName Expressions END
rule 177 Class: CLASS ClassName Terminator Expressions END
rule 178 Class: CLASS ClassName END
rule 179 Class: CLASS ClassName Terminator END
rule 180 Class: CLASS ClassName "<" ClassName Expressions END
rule 181 Class: CLASS ClassName "<" ClassName Terminator Expressions END
rule 182 Class: CLASS ClassName "<" ClassName END
rule 183 Class: CLASS ClassName "<" ClassName Terminator END
rule 184 ClassName: CONSTANT
rule 185 ClassName: NamespaceAccess
rule 186 If: IF Expression Terminator Expressions END
rule 187 If: IF Expression Terminator Expressions Else
rule 188 Else: ELSE Terminator Expressions Terminator END
rule 189 Else: ELSE Terminator Expressions END
rule 190 Else: ElseIf
rule 191 ElseIf: ELSIF Expression Terminator Expressions END
rule 192 ElseIf: ELSIF Expression Terminator Expressions Else
rule 193 While: WHILE Expression Terminator Expressions END
rule 194 Return: RETURN Expression
rule 195 Return: RETURN
rule 196 Property: PROPERTY IDENTIFIER
rule 197 Property: PROPERTY PropertyList
rule 198 PropertyList: IDENTIFIER IDENTIFIER
rule 199 PropertyList: PropertyList IDENTIFIER

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (75)
    on right: 
    on left : 
  Program (76)
    on right: 
    on left : 1 2
  Expressions (77)
    on right: 2 4 5 79 144 173 174 176 177 180 181 186 187 188 189 191 192 193
    on left : 3 4 5 6
  Expression (78)
    on right: 3 4 29 46 47 52 53 54 55 56 63 67 68 69 70 71 72 75 76 81 82 83 84 85 86 87 88 89 90 91 92 93 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 135 136 137 138 186 187 191 192 193 194
    on left : 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
  Terminator (79)
    on right: 4 5 6 7 49 50 53 54 78 165 166 174 177 179 181 183 186 187 188 189 191 192 193
    on left : 7 8
  Literal (80)
    on right: 9 134
    on left : 35 36 37 38 39 40 41 42
  AssignmentFunction (81)
    on right: 10
    on left : 63
  Call (82)
    on right: 11
    on left : 64 65 66 67 68 69 70 71 72
  KeyValExpression (83)
    on right: 14
    on left : 56
  ListExpression (84)
    on right: 15
    on left : 45 46 47
  NamespaceAccess (85)
    on right: 16 185
    on left : 81 82
  Defined (86)
    on right: 17
    on left : 80
  DefMethod (87)
    on right: 18
    on left : 139 140 141 142 143
  Operation (88)
    on right: 19
    on left : 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
  SetVariable (89)
    on right: 20
    on left : 134 135 136 137 138
  GetVariable (90)
    on right: 21 80
    on left : 30 31 32 33 34
  Namespace (91)
    on right: 22
    on left : 173 174 175
  Class (92)
    on right: 23
    on left : 176 177 178 179 180 181 182 183
  If (93)
    on right: 24
    on left : 186 187
  While (94)
    on right: 25
    on left : 193
  Return (95)
    on right: 26
    on left : 194 195
  Property (96)
    on right: 27
    on left : 196 197
  Lambda (97)
    on right: 28 64 65 67 69 131
    on left : 77 78 79
  True (98)
    on right: 38
    on left : 57 58 59
  False (99)
    on right: 39
    on left : 60 61 62
  Regex (100)
    on right: 41
    on left : 43 44
  List (101)
    on right: 45
    on left : 48 49 50 51
  ExpressionList (102)
    on right: 49 50 51 53 54 55
    on left : 52 53 54 55
  Arguments (103)
    on right: 65 66 67 68 71 131 132
    on left : 73 74
  Operator (104)
    on right: 71 141
    on left : 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163
  ArgList (105)
    on right: 74 76
    on left : 75 76
  Parameters (106)
    on right: 79 144 145
    on left : 164 165 166 167
  OperatorAssignment (107)
    on right: 94
    on left : 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133
  MethodBlock (108)
    on right: 139 140 141 142 143
    on left : 144 145
  ParamList (109)
    on right: 166 167 169
    on left : 168 169
  Parameter (110)
    on right: 168 169
    on left : 170 171 172
  ClassName (111)
    on right: 176 177 178 179 180 181 182 183
    on left : 184 185
  Else (112)
    on right: 187 192
    on left : 188 189 190
  ElseIf (113)
    on right: 190
    on left : 191 192
  PropertyList (114)
    on right: 197 199
    on left : 198 199

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  DO (2) 144 145
  END (3) 144 145 173 174 175 176 177 178 179 180 181 182 183 186 188 189 191 193
  CLASS (4) 176 177 178 179 180 181 182 183
  LOAD (5) 
  IF (6) 186 187
  WHILE (7) 193
  NAMESPACE (8) 173 174 175
  ELSE (9) 188 189
  ELSIF (10) 191 192
  RETURN (11) 194 195
  BREAK (12) 
  NEXT (13) 13
  TRUE (14) 57
  YES (15) 58
  ON (16) 59
  FALSE (17) 60
  NO (18) 61
  OFF (19) 62
  NIL (20) 40
  SELF (21) 12
  DEFINED (22) 80
  PROPERTY (23) 196 197
  CONSTANT (24) 30 81 101 106 111 116 121 126 134 173 174 175 184
  GLOBAL (25) 31 102 107 112 117 122 127 135
  CLASS_IDENTIFIER (26) 32 103 108 113 118 123 128 136 140 172
  INSTANCE_IDENTIFIER (27) 33 104 109 114 119 124 129 137 171
  IDENTIFIER (28) 34 63 64 65 66 67 68 69 70 105 110 115 120 125 130 131 132 133 138 139 170 196 198 199
  FLOAT (29) 36
  NUMBER (30) 35
  STRING (31) 37
  TERMINATOR (32) 7 8
  EOF (33) 2
  REGEX (34) 43 44
  REGEX_FLAGS (35) 43
  SYMBOL (36) 42
  "." (37) 63 67 68 69 70 71 72
  "**" (38) 87 151
  "*" (39) 86 148
  "/" (40) 88 149
  "%" (41) 89 150
  "+" (42) 83 146
  "-" (43) 84 85 147
  ">" (44) 90 159
  "<" (45) 92 162 180 181 182 183
  ">=" (46) 91 160
  "<=" (47) 93 161
  "is" (48) 98 157
  "isnt" (49) 99 158
  "not" (50) 72 95 156
  "and" (51) 96 154
  "or" (52) 97 155
  "=" (53) 46 63 134 135 136 137 138 142
  "*=" (54) 111 112 113 114 115
  "/=" (55) 116 117 118 119 120
  "%=" (56) 121 122 123 124 125
  "+=" (57) 101 102 103 104 105
  "-=" (58) 106 107 108 109 110
  "**=" (59) 126 127 128 129 130
  "(" (60) 29 73 74 80
  ")" (61) 29 73 74 80
  "[" (62) 46 47 48 49 50 51 142 143
  "]" (63) 46 47 48 49 50 51 142 143
  "," (64) 53 54 55 76 169
  "=>" (65) 56
  "->" (66) 77 78 79
  "{" (67) 77 78 79
  "}" (68) 77 78 79
  "::" (69) 81 82
  "=~" (70) 100 163
  ".=" (71) 131 132 133
  "[]" (72) 152
  "[]=" (73) 153
  "|" (74) 166 167

--------- State ---------

state 0


  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62
  $default      reduce using rule 1 (Program)

  Program       go to state 1
  Expressions   go to state 2
  Expression    go to state 3
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 1


  $end          shift, and go to state 78


state 2

   2) Program : Expressions _ EOF
   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator

  TERMINATOR    shift, and go to state 5
  EOF           shift, and go to state 79

  Terminator    go to state 80

state 3

   3) Expressions : Expression _
  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "=>"          shift, and go to state 82
  "=~"          shift, and go to state 98
  $default      reduce using rule 3 (Expressions)


state 4

   6) Expressions : Terminator _

  $default      reduce using rule 6 (Expressions)


state 5

   7) Terminator : TERMINATOR _ Terminator
   8) Terminator : TERMINATOR _

  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 8 (Terminator)]
  $default      reduce using rule 8 (Terminator)

  Terminator    go to state 99

state 6

   9) Expression : Literal _

  $default      reduce using rule 9 (Expression)


state 7

  10) Expression : AssignmentFunction _

  $default      reduce using rule 10 (Expression)


state 8

  11) Expression : Call _

  $default      reduce using rule 11 (Expression)


state 9

  12) Expression : SELF _

  $default      reduce using rule 12 (Expression)


state 10

  13) Expression : NEXT _

  $default      reduce using rule 13 (Expression)


state 11

  14) Expression : KeyValExpression _

  $default      reduce using rule 14 (Expression)


state 12

  15) Expression : ListExpression _

  $default      reduce using rule 15 (Expression)


state 13

  16) Expression : NamespaceAccess _

  $default      reduce using rule 16 (Expression)


state 14

  17) Expression : Defined _

  $default      reduce using rule 17 (Expression)


state 15

  18) Expression : DefMethod _

  $default      reduce using rule 18 (Expression)


state 16

  19) Expression : Operation _

  $default      reduce using rule 19 (Expression)


state 17

  20) Expression : SetVariable _

  $default      reduce using rule 20 (Expression)


state 18

  21) Expression : GetVariable _

  $default      reduce using rule 21 (Expression)


state 19

  22) Expression : Namespace _

  $default      reduce using rule 22 (Expression)


state 20

  23) Expression : Class _

  $default      reduce using rule 23 (Expression)


state 21

  24) Expression : If _

  $default      reduce using rule 24 (Expression)


state 22

  25) Expression : While _

  $default      reduce using rule 25 (Expression)


state 23

  26) Expression : Return _

  $default      reduce using rule 26 (Expression)


state 24

  27) Expression : Property _

  $default      reduce using rule 27 (Expression)


state 25

  28) Expression : Lambda _

  $default      reduce using rule 28 (Expression)


state 26

  29) Expression : "(" _ Expression ")"

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  Expression    go to state 100
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 27

  30) GetVariable : CONSTANT _
  81) NamespaceAccess : CONSTANT _ "::" Expression
 101) OperatorAssignment : CONSTANT _ "+=" Expression
 106) OperatorAssignment : CONSTANT _ "-=" Expression
 111) OperatorAssignment : CONSTANT _ "*=" Expression
 116) OperatorAssignment : CONSTANT _ "/=" Expression
 121) OperatorAssignment : CONSTANT _ "%=" Expression
 126) OperatorAssignment : CONSTANT _ "**=" Expression
 134) SetVariable : CONSTANT _ "=" Literal

  "="           shift, and go to state 108
  "*="          shift, and go to state 104
  "/="          shift, and go to state 105
  "%="          shift, and go to state 106
  "+="          shift, and go to state 102
  "-="          shift, and go to state 103
  "**="         shift, and go to state 107
  "::"          shift, and go to state 101
  "::"          [reduce using rule 30 (GetVariable)]
  $default      reduce using rule 30 (GetVariable)


state 28

  31) GetVariable : GLOBAL _
 102) OperatorAssignment : GLOBAL _ "+=" Expression
 107) OperatorAssignment : GLOBAL _ "-=" Expression
 112) OperatorAssignment : GLOBAL _ "*=" Expression
 117) OperatorAssignment : GLOBAL _ "/=" Expression
 122) OperatorAssignment : GLOBAL _ "%=" Expression
 127) OperatorAssignment : GLOBAL _ "**=" Expression
 135) SetVariable : GLOBAL _ "=" Expression

  "="           shift, and go to state 115
  "*="          shift, and go to state 111
  "/="          shift, and go to state 112
  "%="          shift, and go to state 113
  "+="          shift, and go to state 109
  "-="          shift, and go to state 110
  "**="         shift, and go to state 114
  $default      reduce using rule 31 (GetVariable)


state 29

  32) GetVariable : CLASS_IDENTIFIER _
 103) OperatorAssignment : CLASS_IDENTIFIER _ "+=" Expression
 108) OperatorAssignment : CLASS_IDENTIFIER _ "-=" Expression
 113) OperatorAssignment : CLASS_IDENTIFIER _ "*=" Expression
 118) OperatorAssignment : CLASS_IDENTIFIER _ "/=" Expression
 123) OperatorAssignment : CLASS_IDENTIFIER _ "%=" Expression
 128) OperatorAssignment : CLASS_IDENTIFIER _ "**=" Expression
 136) SetVariable : CLASS_IDENTIFIER _ "=" Expression
 140) DefMethod : CLASS_IDENTIFIER _ MethodBlock

  DO            shift, and go to state 124
  "="           shift, and go to state 122
  "*="          shift, and go to state 118
  "/="          shift, and go to state 119
  "%="          shift, and go to state 120
  "+="          shift, and go to state 116
  "-="          shift, and go to state 117
  "**="         shift, and go to state 121
  $default      reduce using rule 32 (GetVariable)

  MethodBlock   go to state 123

state 30

  33) GetVariable : INSTANCE_IDENTIFIER _
 104) OperatorAssignment : INSTANCE_IDENTIFIER _ "+=" Expression
 109) OperatorAssignment : INSTANCE_IDENTIFIER _ "-=" Expression
 114) OperatorAssignment : INSTANCE_IDENTIFIER _ "*=" Expression
 119) OperatorAssignment : INSTANCE_IDENTIFIER _ "/=" Expression
 124) OperatorAssignment : INSTANCE_IDENTIFIER _ "%=" Expression
 129) OperatorAssignment : INSTANCE_IDENTIFIER _ "**=" Expression
 137) SetVariable : INSTANCE_IDENTIFIER _ "=" Expression

  "="           shift, and go to state 131
  "*="          shift, and go to state 127
  "/="          shift, and go to state 128
  "%="          shift, and go to state 129
  "+="          shift, and go to state 125
  "-="          shift, and go to state 126
  "**="         shift, and go to state 130
  $default      reduce using rule 33 (GetVariable)


state 31

  34) GetVariable : IDENTIFIER _
  64) Call : IDENTIFIER _ Lambda
  65) Call : IDENTIFIER _ Arguments Lambda
  66) Call : IDENTIFIER _ Arguments
 105) OperatorAssignment : IDENTIFIER _ "+=" Expression
 110) OperatorAssignment : IDENTIFIER _ "-=" Expression
 115) OperatorAssignment : IDENTIFIER _ "*=" Expression
 120) OperatorAssignment : IDENTIFIER _ "/=" Expression
 125) OperatorAssignment : IDENTIFIER _ "%=" Expression
 130) OperatorAssignment : IDENTIFIER _ "**=" Expression
 131) OperatorAssignment : IDENTIFIER _ ".=" IDENTIFIER Arguments Lambda
 132) OperatorAssignment : IDENTIFIER _ ".=" IDENTIFIER Arguments
 133) OperatorAssignment : IDENTIFIER _ ".=" IDENTIFIER
 138) SetVariable : IDENTIFIER _ "=" Expression
 139) DefMethod : IDENTIFIER _ MethodBlock

  DO            shift, and go to state 124
  "="           shift, and go to state 142
  "*="          shift, and go to state 137
  "/="          shift, and go to state 138
  "%="          shift, and go to state 139
  "+="          shift, and go to state 135
  "-="          shift, and go to state 136
  "**="         shift, and go to state 140
  "("           shift, and go to state 134
  "("           [reduce using rule 34 (GetVariable)]
  "->"          shift, and go to state 49
  "->"          [reduce using rule 34 (GetVariable)]
  ".="          shift, and go to state 141
  $default      reduce using rule 34 (GetVariable)

  Lambda        go to state 132
  Arguments     go to state 133
  MethodBlock   go to state 143

state 32

  35) Literal : NUMBER _

  $default      reduce using rule 35 (Literal)


state 33

  36) Literal : FLOAT _

  $default      reduce using rule 36 (Literal)


state 34

  37) Literal : STRING _

  $default      reduce using rule 37 (Literal)


state 35

  38) Literal : True _

  $default      reduce using rule 38 (Literal)


state 36

  39) Literal : False _

  $default      reduce using rule 39 (Literal)


state 37

  40) Literal : NIL _

  $default      reduce using rule 40 (Literal)


state 38

  41) Literal : Regex _

  $default      reduce using rule 41 (Literal)


state 39

  42) Literal : SYMBOL _

  $default      reduce using rule 42 (Literal)


state 40

  43) Regex : REGEX _ REGEX_FLAGS
  44) Regex : REGEX _

  REGEX_FLAGS   shift, and go to state 144
  $default      reduce using rule 44 (Regex)


state 41

  45) ListExpression : List _

  $default      reduce using rule 45 (ListExpression)


state 42

  48) List : "[" _ "]"
  49) List : "[" _ Terminator ExpressionList "]"
  50) List : "[" _ Terminator ExpressionList Terminator "]"
  51) List : "[" _ ExpressionList "]"
 142) DefMethod : "[" _ "]" "=" MethodBlock
 143) DefMethod : "[" _ "]" MethodBlock

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "]"           shift, and go to state 146
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 145
  Terminator    go to state 147
  ExpressionList  go to state 148
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 43

  57) True : TRUE _

  $default      reduce using rule 57 (True)


state 44

  58) True : YES _

  $default      reduce using rule 58 (True)


state 45

  59) True : ON _

  $default      reduce using rule 59 (True)


state 46

  60) False : FALSE _

  $default      reduce using rule 60 (False)


state 47

  61) False : NO _

  $default      reduce using rule 61 (False)


state 48

  62) False : OFF _

  $default      reduce using rule 62 (False)


state 49

  77) Lambda : "->" _ "{" "}"
  78) Lambda : "->" _ "{" Terminator "}"
  79) Lambda : "->" _ "{" Parameters Expressions "}"

  "{"           shift, and go to state 149


state 50

  80) Defined : DEFINED _ "(" GetVariable ")"

  "("           shift, and go to state 150


state 51

  82) NamespaceAccess : "::" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 151
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 52

  85) Operation : "-" _ Expression
 147) Operator : "-" _

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62
  $default      reduce using rule 147 (Operator)

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 152
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 53

  94) Operation : OperatorAssignment _

  $default      reduce using rule 94 (Operation)


state 54

  95) Operation : "not" _ Expression
 156) Operator : "not" _

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62
  $default      reduce using rule 156 (Operator)

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 153
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 55

 141) DefMethod : Operator _ MethodBlock

  DO            shift, and go to state 124

  MethodBlock   go to state 154

state 56

 146) Operator : "+" _

  $default      reduce using rule 146 (Operator)


state 57

 148) Operator : "*" _

  $default      reduce using rule 148 (Operator)


state 58

 149) Operator : "/" _

  $default      reduce using rule 149 (Operator)


state 59

 150) Operator : "%" _

  $default      reduce using rule 150 (Operator)


state 60

 151) Operator : "**" _

  $default      reduce using rule 151 (Operator)


state 61

 152) Operator : "[]" _

  $default      reduce using rule 152 (Operator)


state 62

 153) Operator : "[]=" _

  $default      reduce using rule 153 (Operator)


state 63

 154) Operator : "and" _

  $default      reduce using rule 154 (Operator)


state 64

 155) Operator : "or" _

  $default      reduce using rule 155 (Operator)


state 65

 157) Operator : "is" _

  $default      reduce using rule 157 (Operator)


state 66

 158) Operator : "isnt" _

  $default      reduce using rule 158 (Operator)


state 67

 159) Operator : ">" _

  $default      reduce using rule 159 (Operator)


state 68

 160) Operator : ">=" _

  $default      reduce using rule 160 (Operator)


state 69

 161) Operator : "<=" _

  $default      reduce using rule 161 (Operator)


state 70

 162) Operator : "<" _

  $default      reduce using rule 162 (Operator)


state 71

 163) Operator : "=~" _

  $default      reduce using rule 163 (Operator)


state 72

 173) Namespace : NAMESPACE _ CONSTANT Expressions END
 174) Namespace : NAMESPACE _ CONSTANT Terminator Expressions END
 175) Namespace : NAMESPACE _ CONSTANT END

  CONSTANT      shift, and go to state 155


state 73

 176) Class : CLASS _ ClassName Expressions END
 177) Class : CLASS _ ClassName Terminator Expressions END
 178) Class : CLASS _ ClassName END
 179) Class : CLASS _ ClassName Terminator END
 180) Class : CLASS _ ClassName "<" ClassName Expressions END
 181) Class : CLASS _ ClassName "<" ClassName Terminator Expressions END
 182) Class : CLASS _ ClassName "<" ClassName END
 183) Class : CLASS _ ClassName "<" ClassName Terminator END

  CONSTANT      shift, and go to state 156
  "::"          shift, and go to state 51

  ClassName     go to state 157
  NamespaceAccess  go to state 158

state 74

 186) If : IF _ Expression Terminator Expressions END
 187) If : IF _ Expression Terminator Expressions Else

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 159
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 75

 193) While : WHILE _ Expression Terminator Expressions END

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 160
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 76

 194) Return : RETURN _ Expression
 195) Return : RETURN _

  CLASS         shift, and go to state 73
  CLASS         [reduce using rule 195 (Return)]
  IF            shift, and go to state 74
  IF            [reduce using rule 195 (Return)]
  WHILE         shift, and go to state 75
  WHILE         [reduce using rule 195 (Return)]
  NAMESPACE     shift, and go to state 72
  NAMESPACE     [reduce using rule 195 (Return)]
  RETURN        shift, and go to state 76
  RETURN        [reduce using rule 195 (Return)]
  NEXT          shift, and go to state 10
  NEXT          [reduce using rule 195 (Return)]
  TRUE          shift, and go to state 43
  TRUE          [reduce using rule 195 (Return)]
  YES           shift, and go to state 44
  YES           [reduce using rule 195 (Return)]
  ON            shift, and go to state 45
  ON            [reduce using rule 195 (Return)]
  FALSE         shift, and go to state 46
  FALSE         [reduce using rule 195 (Return)]
  NO            shift, and go to state 47
  NO            [reduce using rule 195 (Return)]
  OFF           shift, and go to state 48
  OFF           [reduce using rule 195 (Return)]
  NIL           shift, and go to state 37
  NIL           [reduce using rule 195 (Return)]
  SELF          shift, and go to state 9
  SELF          [reduce using rule 195 (Return)]
  DEFINED       shift, and go to state 50
  DEFINED       [reduce using rule 195 (Return)]
  PROPERTY      shift, and go to state 77
  PROPERTY      [reduce using rule 195 (Return)]
  CONSTANT      shift, and go to state 27
  CONSTANT      [reduce using rule 195 (Return)]
  GLOBAL        shift, and go to state 28
  GLOBAL        [reduce using rule 195 (Return)]
  CLASS_IDENTIFIER  shift, and go to state 29
  CLASS_IDENTIFIER  [reduce using rule 195 (Return)]
  INSTANCE_IDENTIFIER  shift, and go to state 30
  INSTANCE_IDENTIFIER  [reduce using rule 195 (Return)]
  IDENTIFIER    shift, and go to state 31
  IDENTIFIER    [reduce using rule 195 (Return)]
  FLOAT         shift, and go to state 33
  FLOAT         [reduce using rule 195 (Return)]
  NUMBER        shift, and go to state 32
  NUMBER        [reduce using rule 195 (Return)]
  STRING        shift, and go to state 34
  STRING        [reduce using rule 195 (Return)]
  REGEX         shift, and go to state 40
  REGEX         [reduce using rule 195 (Return)]
  SYMBOL        shift, and go to state 39
  SYMBOL        [reduce using rule 195 (Return)]
  "**"          shift, and go to state 60
  "**"          [reduce using rule 195 (Return)]
  "*"           shift, and go to state 57
  "*"           [reduce using rule 195 (Return)]
  "/"           shift, and go to state 58
  "/"           [reduce using rule 195 (Return)]
  "%"           shift, and go to state 59
  "%"           [reduce using rule 195 (Return)]
  "+"           shift, and go to state 56
  "+"           [reduce using rule 195 (Return)]
  "-"           shift, and go to state 52
  "-"           [reduce using rule 195 (Return)]
  ">"           shift, and go to state 67
  ">"           [reduce using rule 195 (Return)]
  "<"           shift, and go to state 70
  "<"           [reduce using rule 195 (Return)]
  ">="          shift, and go to state 68
  ">="          [reduce using rule 195 (Return)]
  "<="          shift, and go to state 69
  "<="          [reduce using rule 195 (Return)]
  "is"          shift, and go to state 65
  "is"          [reduce using rule 195 (Return)]
  "isnt"        shift, and go to state 66
  "isnt"        [reduce using rule 195 (Return)]
  "not"         shift, and go to state 54
  "not"         [reduce using rule 195 (Return)]
  "and"         shift, and go to state 63
  "and"         [reduce using rule 195 (Return)]
  "or"          shift, and go to state 64
  "or"          [reduce using rule 195 (Return)]
  "("           shift, and go to state 26
  "("           [reduce using rule 195 (Return)]
  "["           shift, and go to state 42
  "["           [reduce using rule 195 (Return)]
  "->"          shift, and go to state 49
  "->"          [reduce using rule 195 (Return)]
  "::"          shift, and go to state 51
  "::"          [reduce using rule 195 (Return)]
  "=~"          shift, and go to state 71
  "=~"          [reduce using rule 195 (Return)]
  "[]"          shift, and go to state 61
  "[]"          [reduce using rule 195 (Return)]
  "[]="         shift, and go to state 62
  "[]="         [reduce using rule 195 (Return)]
  $default      reduce using rule 195 (Return)

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 161
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 77

 196) Property : PROPERTY _ IDENTIFIER
 197) Property : PROPERTY _ PropertyList

  IDENTIFIER    shift, and go to state 162

  PropertyList  go to state 163

state 78


  $end          shift, and go to state 164


state 79

   2) Program : Expressions EOF _

  $default      reduce using rule 2 (Program)


state 80

   4) Expressions : Expressions Terminator _ Expression
   5) Expressions : Expressions Terminator _

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62
  $default      reduce using rule 5 (Expressions)

  Expression    go to state 165
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 81

  46) ListExpression : Expression "[" _ Expression "]" "=" Expression
  47) ListExpression : Expression "[" _ Expression "]"

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 166
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 82

  56) KeyValExpression : Expression "=>" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 167
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 83

  63) AssignmentFunction : Expression "." _ IDENTIFIER "=" Expression
  67) Call : Expression "." _ IDENTIFIER Arguments Lambda
  68) Call : Expression "." _ IDENTIFIER Arguments
  69) Call : Expression "." _ IDENTIFIER Lambda
  70) Call : Expression "." _ IDENTIFIER
  71) Call : Expression "." _ Operator Arguments
  72) Call : Expression "." _ "not"

  IDENTIFIER    shift, and go to state 168
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 171
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 170
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Operator      go to state 169

state 84

  83) Operation : Expression "+" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 172
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 85

  84) Operation : Expression "-" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 173
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 86

  86) Operation : Expression "*" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 174
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 87

  87) Operation : Expression "**" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 175
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 88

  88) Operation : Expression "/" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 176
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 89

  89) Operation : Expression "%" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 177
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 90

  90) Operation : Expression ">" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 178
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 91

  91) Operation : Expression ">=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 179
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 92

  92) Operation : Expression "<" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 180
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 93

  93) Operation : Expression "<=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 181
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 94

  96) Operation : Expression "and" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 182
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 95

  97) Operation : Expression "or" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 183
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 96

  98) Operation : Expression "is" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 184
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 97

  99) Operation : Expression "isnt" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 185
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 98

 100) Operation : Expression "=~" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 186
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 99

   7) Terminator : TERMINATOR Terminator _

  $default      reduce using rule 7 (Terminator)


state 100

  29) Expression : "(" Expression _ ")"
  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  ")"           shift, and go to state 187
  "["           shift, and go to state 81
  "=>"          shift, and go to state 82
  "=~"          shift, and go to state 98


state 101

  81) NamespaceAccess : CONSTANT "::" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 188
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 102

 101) OperatorAssignment : CONSTANT "+=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 189
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 103

 106) OperatorAssignment : CONSTANT "-=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 190
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 104

 111) OperatorAssignment : CONSTANT "*=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 191
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 105

 116) OperatorAssignment : CONSTANT "/=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 192
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 106

 121) OperatorAssignment : CONSTANT "%=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 193
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 107

 126) OperatorAssignment : CONSTANT "**=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 194
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 108

 134) SetVariable : CONSTANT "=" _ Literal

  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39

  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  Literal       go to state 195

state 109

 102) OperatorAssignment : GLOBAL "+=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 196
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 110

 107) OperatorAssignment : GLOBAL "-=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 197
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 111

 112) OperatorAssignment : GLOBAL "*=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 198
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 112

 117) OperatorAssignment : GLOBAL "/=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 199
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 113

 122) OperatorAssignment : GLOBAL "%=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 200
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 114

 127) OperatorAssignment : GLOBAL "**=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 201
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 115

 135) SetVariable : GLOBAL "=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 202
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 116

 103) OperatorAssignment : CLASS_IDENTIFIER "+=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 203
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 117

 108) OperatorAssignment : CLASS_IDENTIFIER "-=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 204
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 118

 113) OperatorAssignment : CLASS_IDENTIFIER "*=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 205
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 119

 118) OperatorAssignment : CLASS_IDENTIFIER "/=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 206
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 120

 123) OperatorAssignment : CLASS_IDENTIFIER "%=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 207
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 121

 128) OperatorAssignment : CLASS_IDENTIFIER "**=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 208
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 122

 136) SetVariable : CLASS_IDENTIFIER "=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 209
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 123

 140) DefMethod : CLASS_IDENTIFIER MethodBlock _

  $default      reduce using rule 140 (DefMethod)


state 124

 144) MethodBlock : DO _ Parameters Expressions END
 145) MethodBlock : DO _ Parameters END

  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 164 (Parameters)]
  "|"           shift, and go to state 212
  $default      reduce using rule 164 (Parameters)

  Parameters    go to state 210
  Terminator    go to state 211

state 125

 104) OperatorAssignment : INSTANCE_IDENTIFIER "+=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 213
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 126

 109) OperatorAssignment : INSTANCE_IDENTIFIER "-=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 214
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 127

 114) OperatorAssignment : INSTANCE_IDENTIFIER "*=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 215
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 128

 119) OperatorAssignment : INSTANCE_IDENTIFIER "/=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 216
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 129

 124) OperatorAssignment : INSTANCE_IDENTIFIER "%=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 217
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 130

 129) OperatorAssignment : INSTANCE_IDENTIFIER "**=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 218
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 131

 137) SetVariable : INSTANCE_IDENTIFIER "=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 219
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 132

  64) Call : IDENTIFIER Lambda _

  $default      reduce using rule 64 (Call)


state 133

  65) Call : IDENTIFIER Arguments _ Lambda
  66) Call : IDENTIFIER Arguments _

  "->"          shift, and go to state 49
  "->"          [reduce using rule 66 (Call)]
  $default      reduce using rule 66 (Call)

  Lambda        go to state 220

state 134

  73) Arguments : "(" _ ")"
  74) Arguments : "(" _ ArgList ")"

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  ")"           shift, and go to state 222
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 221
  ArgList       go to state 223
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 135

 105) OperatorAssignment : IDENTIFIER "+=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 224
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 136

 110) OperatorAssignment : IDENTIFIER "-=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 225
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 137

 115) OperatorAssignment : IDENTIFIER "*=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 226
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 138

 120) OperatorAssignment : IDENTIFIER "/=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 227
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 139

 125) OperatorAssignment : IDENTIFIER "%=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 228
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 140

 130) OperatorAssignment : IDENTIFIER "**=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 229
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 141

 131) OperatorAssignment : IDENTIFIER ".=" _ IDENTIFIER Arguments Lambda
 132) OperatorAssignment : IDENTIFIER ".=" _ IDENTIFIER Arguments
 133) OperatorAssignment : IDENTIFIER ".=" _ IDENTIFIER

  IDENTIFIER    shift, and go to state 230


state 142

 138) SetVariable : IDENTIFIER "=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 231
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 143

 139) DefMethod : IDENTIFIER MethodBlock _

  $default      reduce using rule 139 (DefMethod)


state 144

  43) Regex : REGEX REGEX_FLAGS _

  $default      reduce using rule 43 (Regex)


state 145

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  52) ExpressionList : Expression _
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "=>"          shift, and go to state 82
  "=~"          shift, and go to state 98
  $default      reduce using rule 52 (ExpressionList)


state 146

  48) List : "[" "]" _
 142) DefMethod : "[" "]" _ "=" MethodBlock
 143) DefMethod : "[" "]" _ MethodBlock

  DO            shift, and go to state 124
  "="           shift, and go to state 232
  $default      reduce using rule 48 (List)

  MethodBlock   go to state 233

state 147

  49) List : "[" Terminator _ ExpressionList "]"
  50) List : "[" Terminator _ ExpressionList Terminator "]"

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 145
  ExpressionList  go to state 234
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 148

  51) List : "[" ExpressionList _ "]"
  53) ExpressionList : ExpressionList _ "," Terminator Expression
  54) ExpressionList : ExpressionList _ Terminator "," Expression
  55) ExpressionList : ExpressionList _ "," Expression

  TERMINATOR    shift, and go to state 5
  "]"           shift, and go to state 235
  ","           shift, and go to state 236

  Terminator    go to state 237

state 149

  77) Lambda : "->" "{" _ "}"
  78) Lambda : "->" "{" _ Terminator "}"
  79) Lambda : "->" "{" _ Parameters Expressions "}"

  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 164 (Parameters)]
  "}"           shift, and go to state 238
  "|"           shift, and go to state 212
  $default      reduce using rule 164 (Parameters)

  Terminator    go to state 239
  Parameters    go to state 240

state 150

  80) Defined : DEFINED "(" _ GetVariable ")"

  CONSTANT      shift, and go to state 241
  GLOBAL        shift, and go to state 242
  CLASS_IDENTIFIER  shift, and go to state 243
  INSTANCE_IDENTIFIER  shift, and go to state 244
  IDENTIFIER    shift, and go to state 245

  GetVariable   go to state 246

state 151

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  82) NamespaceAccess : "::" Expression _
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "."           [reduce using rule 82 (NamespaceAccess)]
  "**"          shift, and go to state 87
  "**"          [reduce using rule 82 (NamespaceAccess)]
  "*"           shift, and go to state 86
  "*"           [reduce using rule 82 (NamespaceAccess)]
  "/"           shift, and go to state 88
  "/"           [reduce using rule 82 (NamespaceAccess)]
  "%"           shift, and go to state 89
  "%"           [reduce using rule 82 (NamespaceAccess)]
  "+"           shift, and go to state 84
  "+"           [reduce using rule 82 (NamespaceAccess)]
  "-"           shift, and go to state 85
  "-"           [reduce using rule 82 (NamespaceAccess)]
  ">"           shift, and go to state 90
  ">"           [reduce using rule 82 (NamespaceAccess)]
  "<"           shift, and go to state 92
  "<"           [reduce using rule 82 (NamespaceAccess)]
  ">="          shift, and go to state 91
  ">="          [reduce using rule 82 (NamespaceAccess)]
  "<="          shift, and go to state 93
  "<="          [reduce using rule 82 (NamespaceAccess)]
  "is"          shift, and go to state 96
  "is"          [reduce using rule 82 (NamespaceAccess)]
  "isnt"        shift, and go to state 97
  "isnt"        [reduce using rule 82 (NamespaceAccess)]
  "and"         shift, and go to state 94
  "and"         [reduce using rule 82 (NamespaceAccess)]
  "or"          shift, and go to state 95
  "or"          [reduce using rule 82 (NamespaceAccess)]
  "["           shift, and go to state 81
  "["           [reduce using rule 82 (NamespaceAccess)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 82 (NamespaceAccess)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 82 (NamespaceAccess)]
  $default      reduce using rule 82 (NamespaceAccess)


state 152

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  85) Operation : "-" Expression _
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "["           shift, and go to state 81
  "["           [reduce using rule 85 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 85 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 85 (Operation)]
  $default      reduce using rule 85 (Operation)


state 153

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  95) Operation : "not" Expression _
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "["           shift, and go to state 81
  "["           [reduce using rule 95 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 95 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 95 (Operation)]
  $default      reduce using rule 95 (Operation)


state 154

 141) DefMethod : Operator MethodBlock _

  $default      reduce using rule 141 (DefMethod)


state 155

 173) Namespace : NAMESPACE CONSTANT _ Expressions END
 174) Namespace : NAMESPACE CONSTANT _ Terminator Expressions END
 175) Namespace : NAMESPACE CONSTANT _ END

  END           shift, and go to state 249
  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Expression    go to state 3
  Expressions   go to state 247
  Terminator    go to state 248
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 156

  81) NamespaceAccess : CONSTANT _ "::" Expression
 184) ClassName : CONSTANT _

  "::"          shift, and go to state 101
  "::"          [reduce using rule 184 (ClassName)]
  $default      reduce using rule 184 (ClassName)


state 157

 176) Class : CLASS ClassName _ Expressions END
 177) Class : CLASS ClassName _ Terminator Expressions END
 178) Class : CLASS ClassName _ END
 179) Class : CLASS ClassName _ Terminator END
 180) Class : CLASS ClassName _ "<" ClassName Expressions END
 181) Class : CLASS ClassName _ "<" ClassName Terminator Expressions END
 182) Class : CLASS ClassName _ "<" ClassName END
 183) Class : CLASS ClassName _ "<" ClassName Terminator END

  END           shift, and go to state 253
  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 252
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Expression    go to state 3
  Expressions   go to state 250
  Terminator    go to state 251
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 158

 185) ClassName : NamespaceAccess _

  $default      reduce using rule 185 (ClassName)


state 159

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 186) If : IF Expression _ Terminator Expressions END
 187) If : IF Expression _ Terminator Expressions Else

  TERMINATOR    shift, and go to state 5
  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "=>"          shift, and go to state 82
  "=~"          shift, and go to state 98

  Terminator    go to state 254

state 160

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 193) While : WHILE Expression _ Terminator Expressions END

  TERMINATOR    shift, and go to state 5
  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "=>"          shift, and go to state 82
  "=~"          shift, and go to state 98

  Terminator    go to state 255

state 161

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 194) Return : RETURN Expression _

  "."           shift, and go to state 83
  "."           [reduce using rule 194 (Return)]
  "**"          shift, and go to state 87
  "**"          [reduce using rule 194 (Return)]
  "*"           shift, and go to state 86
  "*"           [reduce using rule 194 (Return)]
  "/"           shift, and go to state 88
  "/"           [reduce using rule 194 (Return)]
  "%"           shift, and go to state 89
  "%"           [reduce using rule 194 (Return)]
  "+"           shift, and go to state 84
  "+"           [reduce using rule 194 (Return)]
  "-"           shift, and go to state 85
  "-"           [reduce using rule 194 (Return)]
  ">"           shift, and go to state 90
  ">"           [reduce using rule 194 (Return)]
  "<"           shift, and go to state 92
  "<"           [reduce using rule 194 (Return)]
  ">="          shift, and go to state 91
  ">="          [reduce using rule 194 (Return)]
  "<="          shift, and go to state 93
  "<="          [reduce using rule 194 (Return)]
  "is"          shift, and go to state 96
  "is"          [reduce using rule 194 (Return)]
  "isnt"        shift, and go to state 97
  "isnt"        [reduce using rule 194 (Return)]
  "and"         shift, and go to state 94
  "and"         [reduce using rule 194 (Return)]
  "or"          shift, and go to state 95
  "or"          [reduce using rule 194 (Return)]
  "["           shift, and go to state 81
  "["           [reduce using rule 194 (Return)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 194 (Return)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 194 (Return)]
  $default      reduce using rule 194 (Return)


state 162

 196) Property : PROPERTY IDENTIFIER _
 198) PropertyList : IDENTIFIER _ IDENTIFIER

  IDENTIFIER    shift, and go to state 256
  IDENTIFIER    [reduce using rule 196 (Property)]
  $default      reduce using rule 196 (Property)


state 163

 197) Property : PROPERTY PropertyList _
 199) PropertyList : PropertyList _ IDENTIFIER

  IDENTIFIER    shift, and go to state 257
  IDENTIFIER    [reduce using rule 197 (Property)]
  $default      reduce using rule 197 (Property)


state 164


  $default      accept


state 165

   4) Expressions : Expressions Terminator Expression _
  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "=>"          shift, and go to state 82
  "=~"          shift, and go to state 98
  $default      reduce using rule 4 (Expressions)


state 166

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression "[" Expression _ "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  47) ListExpression : Expression "[" Expression _ "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "]"           shift, and go to state 258
  "=>"          shift, and go to state 82
  "=~"          shift, and go to state 98


state 167

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  56) KeyValExpression : Expression "=>" Expression _
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "."           [reduce using rule 56 (KeyValExpression)]
  "**"          shift, and go to state 87
  "**"          [reduce using rule 56 (KeyValExpression)]
  "*"           shift, and go to state 86
  "*"           [reduce using rule 56 (KeyValExpression)]
  "/"           shift, and go to state 88
  "/"           [reduce using rule 56 (KeyValExpression)]
  "%"           shift, and go to state 89
  "%"           [reduce using rule 56 (KeyValExpression)]
  "+"           shift, and go to state 84
  "+"           [reduce using rule 56 (KeyValExpression)]
  "-"           shift, and go to state 85
  "-"           [reduce using rule 56 (KeyValExpression)]
  ">"           shift, and go to state 90
  ">"           [reduce using rule 56 (KeyValExpression)]
  "<"           shift, and go to state 92
  "<"           [reduce using rule 56 (KeyValExpression)]
  ">="          shift, and go to state 91
  ">="          [reduce using rule 56 (KeyValExpression)]
  "<="          shift, and go to state 93
  "<="          [reduce using rule 56 (KeyValExpression)]
  "is"          shift, and go to state 96
  "is"          [reduce using rule 56 (KeyValExpression)]
  "isnt"        shift, and go to state 97
  "isnt"        [reduce using rule 56 (KeyValExpression)]
  "and"         shift, and go to state 94
  "and"         [reduce using rule 56 (KeyValExpression)]
  "or"          shift, and go to state 95
  "or"          [reduce using rule 56 (KeyValExpression)]
  "["           shift, and go to state 81
  "["           [reduce using rule 56 (KeyValExpression)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 56 (KeyValExpression)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 56 (KeyValExpression)]
  $default      reduce using rule 56 (KeyValExpression)


state 168

  63) AssignmentFunction : Expression "." IDENTIFIER _ "=" Expression
  67) Call : Expression "." IDENTIFIER _ Arguments Lambda
  68) Call : Expression "." IDENTIFIER _ Arguments
  69) Call : Expression "." IDENTIFIER _ Lambda
  70) Call : Expression "." IDENTIFIER _

  "="           shift, and go to state 259
  "("           shift, and go to state 134
  "("           [reduce using rule 70 (Call)]
  "->"          shift, and go to state 49
  "->"          [reduce using rule 70 (Call)]
  $default      reduce using rule 70 (Call)

  Arguments     go to state 260
  Lambda        go to state 261

state 169

  71) Call : Expression "." Operator _ Arguments

  "("           shift, and go to state 134

  Arguments     go to state 262

state 170

  72) Call : Expression "." "not" _
 156) Operator : "not" _

  "("           [reduce using rule 156 (Operator)]
  $default      reduce using rule 72 (Call)


state 171

 147) Operator : "-" _

  $default      reduce using rule 147 (Operator)


state 172

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  83) Operation : Expression "+" Expression _
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "["           shift, and go to state 81
  "["           [reduce using rule 83 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 83 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 83 (Operation)]
  $default      reduce using rule 83 (Operation)


state 173

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  84) Operation : Expression "-" Expression _
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "["           shift, and go to state 81
  "["           [reduce using rule 84 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 84 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 84 (Operation)]
  $default      reduce using rule 84 (Operation)


state 174

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  86) Operation : Expression "*" Expression _
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "["           shift, and go to state 81
  "["           [reduce using rule 86 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 86 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 86 (Operation)]
  $default      reduce using rule 86 (Operation)


state 175

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  87) Operation : Expression "**" Expression _
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "["           shift, and go to state 81
  "["           [reduce using rule 87 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 87 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 87 (Operation)]
  $default      reduce using rule 87 (Operation)


state 176

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  88) Operation : Expression "/" Expression _
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "["           shift, and go to state 81
  "["           [reduce using rule 88 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 88 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 88 (Operation)]
  $default      reduce using rule 88 (Operation)


state 177

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  89) Operation : Expression "%" Expression _
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "["           shift, and go to state 81
  "["           [reduce using rule 89 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 89 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 89 (Operation)]
  $default      reduce using rule 89 (Operation)


state 178

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  90) Operation : Expression ">" Expression _
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  "["           shift, and go to state 81
  "["           [reduce using rule 90 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 90 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 90 (Operation)]
  $default      reduce using rule 90 (Operation)


state 179

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  91) Operation : Expression ">=" Expression _
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  "["           shift, and go to state 81
  "["           [reduce using rule 91 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 91 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 91 (Operation)]
  $default      reduce using rule 91 (Operation)


state 180

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  92) Operation : Expression "<" Expression _
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  "["           shift, and go to state 81
  "["           [reduce using rule 92 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 92 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 92 (Operation)]
  $default      reduce using rule 92 (Operation)


state 181

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  93) Operation : Expression "<=" Expression _
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  "["           shift, and go to state 81
  "["           [reduce using rule 93 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 93 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 93 (Operation)]
  $default      reduce using rule 93 (Operation)


state 182

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  96) Operation : Expression "and" Expression _
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "["           shift, and go to state 81
  "["           [reduce using rule 96 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 96 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 96 (Operation)]
  $default      reduce using rule 96 (Operation)


state 183

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  97) Operation : Expression "or" Expression _
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "["           shift, and go to state 81
  "["           [reduce using rule 97 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 97 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 97 (Operation)]
  $default      reduce using rule 97 (Operation)


state 184

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  98) Operation : Expression "is" Expression _
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "["           shift, and go to state 81
  "["           [reduce using rule 98 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 98 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 98 (Operation)]
  $default      reduce using rule 98 (Operation)


state 185

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
  99) Operation : Expression "isnt" Expression _
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "["           shift, and go to state 81
  "["           [reduce using rule 99 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 99 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 99 (Operation)]
  $default      reduce using rule 99 (Operation)


state 186

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 100) Operation : Expression "=~" Expression _

  "."           shift, and go to state 83
  "."           [reduce using rule 100 (Operation)]
  "**"          shift, and go to state 87
  "**"          [reduce using rule 100 (Operation)]
  "*"           shift, and go to state 86
  "*"           [reduce using rule 100 (Operation)]
  "/"           shift, and go to state 88
  "/"           [reduce using rule 100 (Operation)]
  "%"           shift, and go to state 89
  "%"           [reduce using rule 100 (Operation)]
  "+"           shift, and go to state 84
  "+"           [reduce using rule 100 (Operation)]
  "-"           shift, and go to state 85
  "-"           [reduce using rule 100 (Operation)]
  ">"           shift, and go to state 90
  ">"           [reduce using rule 100 (Operation)]
  "<"           shift, and go to state 92
  "<"           [reduce using rule 100 (Operation)]
  ">="          shift, and go to state 91
  ">="          [reduce using rule 100 (Operation)]
  "<="          shift, and go to state 93
  "<="          [reduce using rule 100 (Operation)]
  "is"          shift, and go to state 96
  "is"          [reduce using rule 100 (Operation)]
  "isnt"        shift, and go to state 97
  "isnt"        [reduce using rule 100 (Operation)]
  "and"         shift, and go to state 94
  "and"         [reduce using rule 100 (Operation)]
  "or"          shift, and go to state 95
  "or"          [reduce using rule 100 (Operation)]
  "["           shift, and go to state 81
  "["           [reduce using rule 100 (Operation)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 100 (Operation)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 100 (Operation)]
  $default      reduce using rule 100 (Operation)


state 187

  29) Expression : "(" Expression ")" _

  $default      reduce using rule 29 (Expression)


state 188

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  81) NamespaceAccess : CONSTANT "::" Expression _
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "."           [reduce using rule 81 (NamespaceAccess)]
  "**"          shift, and go to state 87
  "**"          [reduce using rule 81 (NamespaceAccess)]
  "*"           shift, and go to state 86
  "*"           [reduce using rule 81 (NamespaceAccess)]
  "/"           shift, and go to state 88
  "/"           [reduce using rule 81 (NamespaceAccess)]
  "%"           shift, and go to state 89
  "%"           [reduce using rule 81 (NamespaceAccess)]
  "+"           shift, and go to state 84
  "+"           [reduce using rule 81 (NamespaceAccess)]
  "-"           shift, and go to state 85
  "-"           [reduce using rule 81 (NamespaceAccess)]
  ">"           shift, and go to state 90
  ">"           [reduce using rule 81 (NamespaceAccess)]
  "<"           shift, and go to state 92
  "<"           [reduce using rule 81 (NamespaceAccess)]
  ">="          shift, and go to state 91
  ">="          [reduce using rule 81 (NamespaceAccess)]
  "<="          shift, and go to state 93
  "<="          [reduce using rule 81 (NamespaceAccess)]
  "is"          shift, and go to state 96
  "is"          [reduce using rule 81 (NamespaceAccess)]
  "isnt"        shift, and go to state 97
  "isnt"        [reduce using rule 81 (NamespaceAccess)]
  "and"         shift, and go to state 94
  "and"         [reduce using rule 81 (NamespaceAccess)]
  "or"          shift, and go to state 95
  "or"          [reduce using rule 81 (NamespaceAccess)]
  "["           shift, and go to state 81
  "["           [reduce using rule 81 (NamespaceAccess)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 81 (NamespaceAccess)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 81 (NamespaceAccess)]
  $default      reduce using rule 81 (NamespaceAccess)


state 189

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 101) OperatorAssignment : CONSTANT "+=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 101 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 101 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 101 (OperatorAssignment)]
  $default      reduce using rule 101 (OperatorAssignment)


state 190

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 106) OperatorAssignment : CONSTANT "-=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 106 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 106 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 106 (OperatorAssignment)]
  $default      reduce using rule 106 (OperatorAssignment)


state 191

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 111) OperatorAssignment : CONSTANT "*=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 111 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 111 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 111 (OperatorAssignment)]
  $default      reduce using rule 111 (OperatorAssignment)


state 192

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 116) OperatorAssignment : CONSTANT "/=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 116 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 116 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 116 (OperatorAssignment)]
  $default      reduce using rule 116 (OperatorAssignment)


state 193

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 121) OperatorAssignment : CONSTANT "%=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 121 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 121 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 121 (OperatorAssignment)]
  $default      reduce using rule 121 (OperatorAssignment)


state 194

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 126) OperatorAssignment : CONSTANT "**=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 126 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 126 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 126 (OperatorAssignment)]
  $default      reduce using rule 126 (OperatorAssignment)


state 195

 134) SetVariable : CONSTANT "=" Literal _

  $default      reduce using rule 134 (SetVariable)


state 196

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 102) OperatorAssignment : GLOBAL "+=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 102 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 102 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 102 (OperatorAssignment)]
  $default      reduce using rule 102 (OperatorAssignment)


state 197

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 107) OperatorAssignment : GLOBAL "-=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 107 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 107 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 107 (OperatorAssignment)]
  $default      reduce using rule 107 (OperatorAssignment)


state 198

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 112) OperatorAssignment : GLOBAL "*=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 112 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 112 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 112 (OperatorAssignment)]
  $default      reduce using rule 112 (OperatorAssignment)


state 199

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 117) OperatorAssignment : GLOBAL "/=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 117 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 117 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 117 (OperatorAssignment)]
  $default      reduce using rule 117 (OperatorAssignment)


state 200

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 122) OperatorAssignment : GLOBAL "%=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 122 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 122 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 122 (OperatorAssignment)]
  $default      reduce using rule 122 (OperatorAssignment)


state 201

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 127) OperatorAssignment : GLOBAL "**=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 127 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 127 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 127 (OperatorAssignment)]
  $default      reduce using rule 127 (OperatorAssignment)


state 202

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 135) SetVariable : GLOBAL "=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 135 (SetVariable)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 135 (SetVariable)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 135 (SetVariable)]
  $default      reduce using rule 135 (SetVariable)


state 203

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 103) OperatorAssignment : CLASS_IDENTIFIER "+=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 103 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 103 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 103 (OperatorAssignment)]
  $default      reduce using rule 103 (OperatorAssignment)


state 204

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 108) OperatorAssignment : CLASS_IDENTIFIER "-=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 108 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 108 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 108 (OperatorAssignment)]
  $default      reduce using rule 108 (OperatorAssignment)


state 205

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 113) OperatorAssignment : CLASS_IDENTIFIER "*=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 113 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 113 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 113 (OperatorAssignment)]
  $default      reduce using rule 113 (OperatorAssignment)


state 206

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 118) OperatorAssignment : CLASS_IDENTIFIER "/=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 118 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 118 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 118 (OperatorAssignment)]
  $default      reduce using rule 118 (OperatorAssignment)


state 207

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 123) OperatorAssignment : CLASS_IDENTIFIER "%=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 123 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 123 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 123 (OperatorAssignment)]
  $default      reduce using rule 123 (OperatorAssignment)


state 208

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 128) OperatorAssignment : CLASS_IDENTIFIER "**=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 128 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 128 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 128 (OperatorAssignment)]
  $default      reduce using rule 128 (OperatorAssignment)


state 209

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 136) SetVariable : CLASS_IDENTIFIER "=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 136 (SetVariable)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 136 (SetVariable)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 136 (SetVariable)]
  $default      reduce using rule 136 (SetVariable)


state 210

 144) MethodBlock : DO Parameters _ Expressions END
 145) MethodBlock : DO Parameters _ END

  END           shift, and go to state 264
  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Expression    go to state 3
  Expressions   go to state 263
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 211

 165) Parameters : Terminator _

  $default      reduce using rule 165 (Parameters)


state 212

 166) Parameters : "|" _ ParamList "|" Terminator
 167) Parameters : "|" _ ParamList "|"

  CLASS_IDENTIFIER  shift, and go to state 269
  INSTANCE_IDENTIFIER  shift, and go to state 268
  IDENTIFIER    shift, and go to state 267

  ParamList     go to state 265
  Parameter     go to state 266

state 213

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 104) OperatorAssignment : INSTANCE_IDENTIFIER "+=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 104 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 104 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 104 (OperatorAssignment)]
  $default      reduce using rule 104 (OperatorAssignment)


state 214

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 109) OperatorAssignment : INSTANCE_IDENTIFIER "-=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 109 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 109 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 109 (OperatorAssignment)]
  $default      reduce using rule 109 (OperatorAssignment)


state 215

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 114) OperatorAssignment : INSTANCE_IDENTIFIER "*=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 114 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 114 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 114 (OperatorAssignment)]
  $default      reduce using rule 114 (OperatorAssignment)


state 216

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 119) OperatorAssignment : INSTANCE_IDENTIFIER "/=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 119 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 119 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 119 (OperatorAssignment)]
  $default      reduce using rule 119 (OperatorAssignment)


state 217

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 124) OperatorAssignment : INSTANCE_IDENTIFIER "%=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 124 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 124 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 124 (OperatorAssignment)]
  $default      reduce using rule 124 (OperatorAssignment)


state 218

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 129) OperatorAssignment : INSTANCE_IDENTIFIER "**=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 129 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 129 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 129 (OperatorAssignment)]
  $default      reduce using rule 129 (OperatorAssignment)


state 219

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 137) SetVariable : INSTANCE_IDENTIFIER "=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 137 (SetVariable)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 137 (SetVariable)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 137 (SetVariable)]
  $default      reduce using rule 137 (SetVariable)


state 220

  65) Call : IDENTIFIER Arguments Lambda _

  $default      reduce using rule 65 (Call)


state 221

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  75) ArgList : Expression _
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "=>"          shift, and go to state 82
  "=~"          shift, and go to state 98
  $default      reduce using rule 75 (ArgList)


state 222

  73) Arguments : "(" ")" _

  $default      reduce using rule 73 (Arguments)


state 223

  74) Arguments : "(" ArgList _ ")"
  76) ArgList : ArgList _ "," Expression

  ")"           shift, and go to state 270
  ","           shift, and go to state 271


state 224

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 105) OperatorAssignment : IDENTIFIER "+=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 105 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 105 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 105 (OperatorAssignment)]
  $default      reduce using rule 105 (OperatorAssignment)


state 225

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 110) OperatorAssignment : IDENTIFIER "-=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 110 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 110 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 110 (OperatorAssignment)]
  $default      reduce using rule 110 (OperatorAssignment)


state 226

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 115) OperatorAssignment : IDENTIFIER "*=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 115 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 115 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 115 (OperatorAssignment)]
  $default      reduce using rule 115 (OperatorAssignment)


state 227

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 120) OperatorAssignment : IDENTIFIER "/=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 120 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 120 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 120 (OperatorAssignment)]
  $default      reduce using rule 120 (OperatorAssignment)


state 228

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 125) OperatorAssignment : IDENTIFIER "%=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 125 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 125 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 125 (OperatorAssignment)]
  $default      reduce using rule 125 (OperatorAssignment)


state 229

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 130) OperatorAssignment : IDENTIFIER "**=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 130 (OperatorAssignment)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 130 (OperatorAssignment)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 130 (OperatorAssignment)]
  $default      reduce using rule 130 (OperatorAssignment)


state 230

 131) OperatorAssignment : IDENTIFIER ".=" IDENTIFIER _ Arguments Lambda
 132) OperatorAssignment : IDENTIFIER ".=" IDENTIFIER _ Arguments
 133) OperatorAssignment : IDENTIFIER ".=" IDENTIFIER _

  "("           shift, and go to state 134
  "("           [reduce using rule 133 (OperatorAssignment)]
  $default      reduce using rule 133 (OperatorAssignment)

  Arguments     go to state 272

state 231

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 138) SetVariable : IDENTIFIER "=" Expression _

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 138 (SetVariable)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 138 (SetVariable)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 138 (SetVariable)]
  $default      reduce using rule 138 (SetVariable)


state 232

 142) DefMethod : "[" "]" "=" _ MethodBlock

  DO            shift, and go to state 124

  MethodBlock   go to state 273

state 233

 143) DefMethod : "[" "]" MethodBlock _

  $default      reduce using rule 143 (DefMethod)


state 234

  49) List : "[" Terminator ExpressionList _ "]"
  50) List : "[" Terminator ExpressionList _ Terminator "]"
  53) ExpressionList : ExpressionList _ "," Terminator Expression
  54) ExpressionList : ExpressionList _ Terminator "," Expression
  55) ExpressionList : ExpressionList _ "," Expression

  TERMINATOR    shift, and go to state 5
  "]"           shift, and go to state 274
  ","           shift, and go to state 236

  Terminator    go to state 275

state 235

  51) List : "[" ExpressionList "]" _

  $default      reduce using rule 51 (List)


state 236

  53) ExpressionList : ExpressionList "," _ Terminator Expression
  55) ExpressionList : ExpressionList "," _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 276
  Terminator    go to state 277
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 237

  54) ExpressionList : ExpressionList Terminator _ "," Expression

  ","           shift, and go to state 278


state 238

  77) Lambda : "->" "{" "}" _

  $default      reduce using rule 77 (Lambda)


state 239

  78) Lambda : "->" "{" Terminator _ "}"
 165) Parameters : Terminator _

  "}"           shift, and go to state 279
  $default      reduce using rule 165 (Parameters)


state 240

  79) Lambda : "->" "{" Parameters _ Expressions "}"

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Expression    go to state 3
  Expressions   go to state 280
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 241

  30) GetVariable : CONSTANT _

  $default      reduce using rule 30 (GetVariable)


state 242

  31) GetVariable : GLOBAL _

  $default      reduce using rule 31 (GetVariable)


state 243

  32) GetVariable : CLASS_IDENTIFIER _

  $default      reduce using rule 32 (GetVariable)


state 244

  33) GetVariable : INSTANCE_IDENTIFIER _

  $default      reduce using rule 33 (GetVariable)


state 245

  34) GetVariable : IDENTIFIER _

  $default      reduce using rule 34 (GetVariable)


state 246

  80) Defined : DEFINED "(" GetVariable _ ")"

  ")"           shift, and go to state 281


state 247

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 173) Namespace : NAMESPACE CONSTANT Expressions _ END

  END           shift, and go to state 282
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 80

state 248

   6) Expressions : Terminator _
 174) Namespace : NAMESPACE CONSTANT Terminator _ Expressions END

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 6 (Expressions)]
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62
  $default      reduce using rule 6 (Expressions)

  Expression    go to state 3
  Expressions   go to state 283
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 249

 175) Namespace : NAMESPACE CONSTANT END _

  $default      reduce using rule 175 (Namespace)


state 250

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 176) Class : CLASS ClassName Expressions _ END

  END           shift, and go to state 284
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 80

state 251

   6) Expressions : Terminator _
 177) Class : CLASS ClassName Terminator _ Expressions END
 179) Class : CLASS ClassName Terminator _ END

  END           shift, and go to state 286
  END           [reduce using rule 6 (Expressions)]
  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 6 (Expressions)]
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Expression    go to state 3
  Expressions   go to state 285
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 252

 162) Operator : "<" _
 180) Class : CLASS ClassName "<" _ ClassName Expressions END
 181) Class : CLASS ClassName "<" _ ClassName Terminator Expressions END
 182) Class : CLASS ClassName "<" _ ClassName END
 183) Class : CLASS ClassName "<" _ ClassName Terminator END

  CONSTANT      shift, and go to state 156
  "::"          shift, and go to state 51
  $default      reduce using rule 162 (Operator)

  ClassName     go to state 287
  NamespaceAccess  go to state 158

state 253

 178) Class : CLASS ClassName END _

  $default      reduce using rule 178 (Class)


state 254

 186) If : IF Expression Terminator _ Expressions END
 187) If : IF Expression Terminator _ Expressions Else

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Expression    go to state 3
  Expressions   go to state 288
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 255

 193) While : WHILE Expression Terminator _ Expressions END

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Expression    go to state 3
  Expressions   go to state 289
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 256

 198) PropertyList : IDENTIFIER IDENTIFIER _

  $default      reduce using rule 198 (PropertyList)


state 257

 199) PropertyList : PropertyList IDENTIFIER _

  $default      reduce using rule 199 (PropertyList)


state 258

  46) ListExpression : Expression "[" Expression "]" _ "=" Expression
  47) ListExpression : Expression "[" Expression "]" _

  "="           shift, and go to state 290
  $default      reduce using rule 47 (ListExpression)


state 259

  63) AssignmentFunction : Expression "." IDENTIFIER "=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 291
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 260

  67) Call : Expression "." IDENTIFIER Arguments _ Lambda
  68) Call : Expression "." IDENTIFIER Arguments _

  "->"          shift, and go to state 49
  "->"          [reduce using rule 68 (Call)]
  $default      reduce using rule 68 (Call)

  Lambda        go to state 292

state 261

  69) Call : Expression "." IDENTIFIER Lambda _

  $default      reduce using rule 69 (Call)


state 262

  71) Call : Expression "." Operator Arguments _

  $default      reduce using rule 71 (Call)


state 263

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 144) MethodBlock : DO Parameters Expressions _ END

  END           shift, and go to state 293
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 80

state 264

 145) MethodBlock : DO Parameters END _

  $default      reduce using rule 145 (MethodBlock)


state 265

 166) Parameters : "|" ParamList _ "|" Terminator
 167) Parameters : "|" ParamList _ "|"
 169) ParamList : ParamList _ "," Parameter

  ","           shift, and go to state 295
  "|"           shift, and go to state 294


state 266

 168) ParamList : Parameter _

  $default      reduce using rule 168 (ParamList)


state 267

 170) Parameter : IDENTIFIER _

  $default      reduce using rule 170 (Parameter)


state 268

 171) Parameter : INSTANCE_IDENTIFIER _

  $default      reduce using rule 171 (Parameter)


state 269

 172) Parameter : CLASS_IDENTIFIER _

  $default      reduce using rule 172 (Parameter)


state 270

  74) Arguments : "(" ArgList ")" _

  $default      reduce using rule 74 (Arguments)


state 271

  76) ArgList : ArgList "," _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 296
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 272

 131) OperatorAssignment : IDENTIFIER ".=" IDENTIFIER Arguments _ Lambda
 132) OperatorAssignment : IDENTIFIER ".=" IDENTIFIER Arguments _

  "->"          shift, and go to state 49
  "->"          [reduce using rule 132 (OperatorAssignment)]
  $default      reduce using rule 132 (OperatorAssignment)

  Lambda        go to state 297

state 273

 142) DefMethod : "[" "]" "=" MethodBlock _

  $default      reduce using rule 142 (DefMethod)


state 274

  49) List : "[" Terminator ExpressionList "]" _

  $default      reduce using rule 49 (List)


state 275

  50) List : "[" Terminator ExpressionList Terminator _ "]"
  54) ExpressionList : ExpressionList Terminator _ "," Expression

  "]"           shift, and go to state 298
  ","           shift, and go to state 278


state 276

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  55) ExpressionList : ExpressionList "," Expression _
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "=>"          shift, and go to state 82
  "=~"          shift, and go to state 98
  $default      reduce using rule 55 (ExpressionList)


state 277

  53) ExpressionList : ExpressionList "," Terminator _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 299
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 278

  54) ExpressionList : ExpressionList Terminator "," _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 300
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 279

  78) Lambda : "->" "{" Terminator "}" _

  $default      reduce using rule 78 (Lambda)


state 280

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
  79) Lambda : "->" "{" Parameters Expressions _ "}"

  TERMINATOR    shift, and go to state 5
  "}"           shift, and go to state 301

  Terminator    go to state 80

state 281

  80) Defined : DEFINED "(" GetVariable ")" _

  $default      reduce using rule 80 (Defined)


state 282

 173) Namespace : NAMESPACE CONSTANT Expressions END _

  $default      reduce using rule 173 (Namespace)


state 283

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 174) Namespace : NAMESPACE CONSTANT Terminator Expressions _ END

  END           shift, and go to state 302
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 80

state 284

 176) Class : CLASS ClassName Expressions END _

  $default      reduce using rule 176 (Class)


state 285

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 177) Class : CLASS ClassName Terminator Expressions _ END

  END           shift, and go to state 303
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 80

state 286

 179) Class : CLASS ClassName Terminator END _

  $default      reduce using rule 179 (Class)


state 287

 180) Class : CLASS ClassName "<" ClassName _ Expressions END
 181) Class : CLASS ClassName "<" ClassName _ Terminator Expressions END
 182) Class : CLASS ClassName "<" ClassName _ END
 183) Class : CLASS ClassName "<" ClassName _ Terminator END

  END           shift, and go to state 306
  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Expression    go to state 3
  Expressions   go to state 304
  Terminator    go to state 305
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 288

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 186) If : IF Expression Terminator Expressions _ END
 187) If : IF Expression Terminator Expressions _ Else

  END           shift, and go to state 307
  ELSE          shift, and go to state 309
  ELSIF         shift, and go to state 311
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 80
  Else          go to state 308
  ElseIf        go to state 310

state 289

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 193) While : WHILE Expression Terminator Expressions _ END

  END           shift, and go to state 312
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 80

state 290

  46) ListExpression : Expression "[" Expression "]" "=" _ Expression

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 313
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 291

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  63) AssignmentFunction : Expression "." IDENTIFIER "=" Expression _
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 63 (AssignmentFunction)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 63 (AssignmentFunction)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 63 (AssignmentFunction)]
  $default      reduce using rule 63 (AssignmentFunction)


state 292

  67) Call : Expression "." IDENTIFIER Arguments Lambda _

  $default      reduce using rule 67 (Call)


state 293

 144) MethodBlock : DO Parameters Expressions END _

  $default      reduce using rule 144 (MethodBlock)


state 294

 166) Parameters : "|" ParamList "|" _ Terminator
 167) Parameters : "|" ParamList "|" _

  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 167 (Parameters)]
  $default      reduce using rule 167 (Parameters)

  Terminator    go to state 314

state 295

 169) ParamList : ParamList "," _ Parameter

  CLASS_IDENTIFIER  shift, and go to state 269
  INSTANCE_IDENTIFIER  shift, and go to state 268
  IDENTIFIER    shift, and go to state 267

  Parameter     go to state 315

state 296

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  76) ArgList : ArgList "," Expression _
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "=>"          shift, and go to state 82
  "=~"          shift, and go to state 98
  $default      reduce using rule 76 (ArgList)


state 297

 131) OperatorAssignment : IDENTIFIER ".=" IDENTIFIER Arguments Lambda _

  $default      reduce using rule 131 (OperatorAssignment)


state 298

  50) List : "[" Terminator ExpressionList Terminator "]" _

  $default      reduce using rule 50 (List)


state 299

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  53) ExpressionList : ExpressionList "," Terminator Expression _
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "=>"          shift, and go to state 82
  "=~"          shift, and go to state 98
  $default      reduce using rule 53 (ExpressionList)


state 300

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  54) ExpressionList : ExpressionList Terminator "," Expression _
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "=>"          shift, and go to state 82
  "=~"          shift, and go to state 98
  $default      reduce using rule 54 (ExpressionList)


state 301

  79) Lambda : "->" "{" Parameters Expressions "}" _

  $default      reduce using rule 79 (Lambda)


state 302

 174) Namespace : NAMESPACE CONSTANT Terminator Expressions END _

  $default      reduce using rule 174 (Namespace)


state 303

 177) Class : CLASS ClassName Terminator Expressions END _

  $default      reduce using rule 177 (Class)


state 304

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 180) Class : CLASS ClassName "<" ClassName Expressions _ END

  END           shift, and go to state 316
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 80

state 305

   6) Expressions : Terminator _
 181) Class : CLASS ClassName "<" ClassName Terminator _ Expressions END
 183) Class : CLASS ClassName "<" ClassName Terminator _ END

  END           shift, and go to state 318
  END           [reduce using rule 6 (Expressions)]
  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 6 (Expressions)]
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Expression    go to state 3
  Expressions   go to state 317
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 306

 182) Class : CLASS ClassName "<" ClassName END _

  $default      reduce using rule 182 (Class)


state 307

 186) If : IF Expression Terminator Expressions END _

  $default      reduce using rule 186 (If)


state 308

 187) If : IF Expression Terminator Expressions Else _

  $default      reduce using rule 187 (If)


state 309

 188) Else : ELSE _ Terminator Expressions Terminator END
 189) Else : ELSE _ Terminator Expressions END

  TERMINATOR    shift, and go to state 5

  Terminator    go to state 319

state 310

 190) Else : ElseIf _

  $default      reduce using rule 190 (Else)


state 311

 191) ElseIf : ELSIF _ Expression Terminator Expressions END
 192) ElseIf : ELSIF _ Expression Terminator Expressions Else

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  Expression    go to state 320
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 312

 193) While : WHILE Expression Terminator Expressions END _

  $default      reduce using rule 193 (While)


state 313

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression "[" Expression "]" "=" Expression _
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "["           [reduce using rule 46 (ListExpression)]
  "=>"          shift, and go to state 82
  "=>"          [reduce using rule 46 (ListExpression)]
  "=~"          shift, and go to state 98
  "=~"          [reduce using rule 46 (ListExpression)]
  $default      reduce using rule 46 (ListExpression)


state 314

 166) Parameters : "|" ParamList "|" Terminator _

  $default      reduce using rule 166 (Parameters)


state 315

 169) ParamList : ParamList "," Parameter _

  $default      reduce using rule 169 (ParamList)


state 316

 180) Class : CLASS ClassName "<" ClassName Expressions END _

  $default      reduce using rule 180 (Class)


state 317

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 181) Class : CLASS ClassName "<" ClassName Terminator Expressions _ END

  END           shift, and go to state 321
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 80

state 318

 183) Class : CLASS ClassName "<" ClassName Terminator END _

  $default      reduce using rule 183 (Class)


state 319

 188) Else : ELSE Terminator _ Expressions Terminator END
 189) Else : ELSE Terminator _ Expressions END

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Expression    go to state 3
  Expressions   go to state 322
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 320

  46) ListExpression : Expression _ "[" Expression "]" "=" Expression
  47) ListExpression : Expression _ "[" Expression "]"
  56) KeyValExpression : Expression _ "=>" Expression
  63) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  67) Call : Expression _ "." IDENTIFIER Arguments Lambda
  68) Call : Expression _ "." IDENTIFIER Arguments
  69) Call : Expression _ "." IDENTIFIER Lambda
  70) Call : Expression _ "." IDENTIFIER
  71) Call : Expression _ "." Operator Arguments
  72) Call : Expression _ "." "not"
  83) Operation : Expression _ "+" Expression
  84) Operation : Expression _ "-" Expression
  86) Operation : Expression _ "*" Expression
  87) Operation : Expression _ "**" Expression
  88) Operation : Expression _ "/" Expression
  89) Operation : Expression _ "%" Expression
  90) Operation : Expression _ ">" Expression
  91) Operation : Expression _ ">=" Expression
  92) Operation : Expression _ "<" Expression
  93) Operation : Expression _ "<=" Expression
  96) Operation : Expression _ "and" Expression
  97) Operation : Expression _ "or" Expression
  98) Operation : Expression _ "is" Expression
  99) Operation : Expression _ "isnt" Expression
 100) Operation : Expression _ "=~" Expression
 191) ElseIf : ELSIF Expression _ Terminator Expressions END
 192) ElseIf : ELSIF Expression _ Terminator Expressions Else

  TERMINATOR    shift, and go to state 5
  "."           shift, and go to state 83
  "**"          shift, and go to state 87
  "*"           shift, and go to state 86
  "/"           shift, and go to state 88
  "%"           shift, and go to state 89
  "+"           shift, and go to state 84
  "-"           shift, and go to state 85
  ">"           shift, and go to state 90
  "<"           shift, and go to state 92
  ">="          shift, and go to state 91
  "<="          shift, and go to state 93
  "is"          shift, and go to state 96
  "isnt"        shift, and go to state 97
  "and"         shift, and go to state 94
  "or"          shift, and go to state 95
  "["           shift, and go to state 81
  "=>"          shift, and go to state 82
  "=~"          shift, and go to state 98

  Terminator    go to state 323

state 321

 181) Class : CLASS ClassName "<" ClassName Terminator Expressions END _

  $default      reduce using rule 181 (Class)


state 322

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 188) Else : ELSE Terminator Expressions _ Terminator END
 189) Else : ELSE Terminator Expressions _ END

  END           shift, and go to state 325
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 324

state 323

 191) ElseIf : ELSIF Expression Terminator _ Expressions END
 192) ElseIf : ELSIF Expression Terminator _ Expressions Else

  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62

  Expression    go to state 3
  Expressions   go to state 326
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 324

   4) Expressions : Expressions Terminator _ Expression
   5) Expressions : Expressions Terminator _
 188) Else : ELSE Terminator Expressions Terminator _ END

  END           shift, and go to state 327
  END           [reduce using rule 5 (Expressions)]
  CLASS         shift, and go to state 73
  IF            shift, and go to state 74
  WHILE         shift, and go to state 75
  NAMESPACE     shift, and go to state 72
  RETURN        shift, and go to state 76
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 43
  YES           shift, and go to state 44
  ON            shift, and go to state 45
  FALSE         shift, and go to state 46
  NO            shift, and go to state 47
  OFF           shift, and go to state 48
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 50
  PROPERTY      shift, and go to state 77
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 40
  SYMBOL        shift, and go to state 39
  "**"          shift, and go to state 60
  "*"           shift, and go to state 57
  "/"           shift, and go to state 58
  "%"           shift, and go to state 59
  "+"           shift, and go to state 56
  "-"           shift, and go to state 52
  ">"           shift, and go to state 67
  "<"           shift, and go to state 70
  ">="          shift, and go to state 68
  "<="          shift, and go to state 69
  "is"          shift, and go to state 65
  "isnt"        shift, and go to state 66
  "not"         shift, and go to state 54
  "and"         shift, and go to state 63
  "or"          shift, and go to state 64
  "("           shift, and go to state 26
  "["           shift, and go to state 42
  "->"          shift, and go to state 49
  "::"          shift, and go to state 51
  "=~"          shift, and go to state 71
  "[]"          shift, and go to state 61
  "[]="         shift, and go to state 62
  $default      reduce using rule 5 (Expressions)

  Expression    go to state 165
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 41
  OperatorAssignment  go to state 53
  Operator      go to state 55

state 325

 189) Else : ELSE Terminator Expressions END _

  $default      reduce using rule 189 (Else)


state 326

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 191) ElseIf : ELSIF Expression Terminator Expressions _ END
 192) ElseIf : ELSIF Expression Terminator Expressions _ Else

  END           shift, and go to state 328
  ELSE          shift, and go to state 309
  ELSIF         shift, and go to state 311
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 80
  ElseIf        go to state 310
  Else          go to state 329

state 327

 188) Else : ELSE Terminator Expressions Terminator END _

  $default      reduce using rule 188 (Else)


state 328

 191) ElseIf : ELSIF Expression Terminator Expressions END _

  $default      reduce using rule 191 (ElseIf)


state 329

 192) ElseIf : ELSIF Expression Terminator Expressions Else _

  $default      reduce using rule 192 (ElseIf)

