state 5 contains 1 shift/reduce conflicts
state 75 contains 16 shift/reduce conflicts
state 123 contains 1 shift/reduce conflicts
state 148 contains 1 shift/reduce conflicts
state 150 contains 18 shift/reduce conflicts
state 151 contains 3 shift/reduce conflicts
state 152 contains 3 shift/reduce conflicts
state 158 contains 18 shift/reduce conflicts
state 164 contains 18 shift/reduce conflicts
state 169 contains 3 shift/reduce conflicts
state 170 contains 3 shift/reduce conflicts
state 171 contains 3 shift/reduce conflicts
state 172 contains 3 shift/reduce conflicts
state 173 contains 3 shift/reduce conflicts
state 174 contains 3 shift/reduce conflicts
state 175 contains 3 shift/reduce conflicts
state 176 contains 3 shift/reduce conflicts
state 177 contains 3 shift/reduce conflicts
state 178 contains 3 shift/reduce conflicts
state 179 contains 3 shift/reduce conflicts
state 180 contains 3 shift/reduce conflicts
state 181 contains 3 shift/reduce conflicts
state 182 contains 3 shift/reduce conflicts
state 183 contains 18 shift/reduce conflicts
state 185 contains 18 shift/reduce conflicts
state 186 contains 3 shift/reduce conflicts
state 187 contains 3 shift/reduce conflicts
state 188 contains 3 shift/reduce conflicts
state 189 contains 3 shift/reduce conflicts
state 190 contains 3 shift/reduce conflicts
state 191 contains 3 shift/reduce conflicts
state 193 contains 3 shift/reduce conflicts
state 194 contains 3 shift/reduce conflicts
state 195 contains 3 shift/reduce conflicts
state 196 contains 3 shift/reduce conflicts
state 197 contains 3 shift/reduce conflicts
state 198 contains 3 shift/reduce conflicts
state 199 contains 3 shift/reduce conflicts
state 200 contains 3 shift/reduce conflicts
state 201 contains 3 shift/reduce conflicts
state 202 contains 3 shift/reduce conflicts
state 203 contains 3 shift/reduce conflicts
state 204 contains 3 shift/reduce conflicts
state 205 contains 3 shift/reduce conflicts
state 206 contains 3 shift/reduce conflicts
state 210 contains 3 shift/reduce conflicts
state 211 contains 3 shift/reduce conflicts
state 212 contains 3 shift/reduce conflicts
state 213 contains 3 shift/reduce conflicts
state 214 contains 3 shift/reduce conflicts
state 215 contains 3 shift/reduce conflicts
state 216 contains 3 shift/reduce conflicts
state 221 contains 3 shift/reduce conflicts
state 222 contains 3 shift/reduce conflicts
state 223 contains 3 shift/reduce conflicts
state 224 contains 3 shift/reduce conflicts
state 225 contains 3 shift/reduce conflicts
state 226 contains 3 shift/reduce conflicts
state 228 contains 3 shift/reduce conflicts
state 243 contains 1 shift/reduce conflicts
state 246 contains 2 shift/reduce conflicts
state 285 contains 3 shift/reduce conflicts
state 288 contains 1 shift/reduce conflicts
state 299 contains 2 shift/reduce conflicts
state 307 contains 3 shift/reduce conflicts
state 316 contains 1 shift/reduce conflicts


-------- Grammar --------

rule 1 Program: 
rule 2 Program: Expressions EOF
rule 3 Expressions: Expression
rule 4 Expressions: Expressions Terminator Expression
rule 5 Expressions: Expressions Terminator
rule 6 Expressions: Terminator
rule 7 Terminator: TERMINATOR Terminator
rule 8 Terminator: TERMINATOR
rule 9 Expression: Literal
rule 10 Expression: AssignmentFunction
rule 11 Expression: Call
rule 12 Expression: SELF
rule 13 Expression: NEXT
rule 14 Expression: KeyValExpression
rule 15 Expression: ListExpression
rule 16 Expression: NamespaceAccess
rule 17 Expression: Defined
rule 18 Expression: DefMethod
rule 19 Expression: Operation
rule 20 Expression: SetVariable
rule 21 Expression: GetVariable
rule 22 Expression: Namespace
rule 23 Expression: Class
rule 24 Expression: If
rule 25 Expression: While
rule 26 Expression: Return
rule 27 Expression: Property
rule 28 Expression: Lambda
rule 29 Expression: "(" Expression ")"
rule 30 GetVariable: CONSTANT
rule 31 GetVariable: GLOBAL
rule 32 GetVariable: CLASS_IDENTIFIER
rule 33 GetVariable: INSTANCE_IDENTIFIER
rule 34 GetVariable: IDENTIFIER
rule 35 Literal: NUMBER
rule 36 Literal: FLOAT
rule 37 Literal: STRING
rule 38 Literal: True
rule 39 Literal: False
rule 40 Literal: NIL
rule 41 Literal: Regex
rule 42 Regex: REGEX REGEX_FLAGS
rule 43 Regex: REGEX
rule 44 ListExpression: List
rule 45 ListExpression: Expression "[" Expression "]" "=" Expression
rule 46 ListExpression: Expression "[" Expression "]"
rule 47 List: "[" "]"
rule 48 List: "[" Terminator ExpressionList "]"
rule 49 List: "[" Terminator ExpressionList Terminator "]"
rule 50 List: "[" ExpressionList "]"
rule 51 ExpressionList: Expression
rule 52 ExpressionList: ExpressionList "," Terminator Expression
rule 53 ExpressionList: ExpressionList Terminator "," Expression
rule 54 ExpressionList: ExpressionList "," Expression
rule 55 KeyValExpression: Expression "=>" Expression
rule 56 True: TRUE
rule 57 True: YES
rule 58 True: ON
rule 59 False: FALSE
rule 60 False: NO
rule 61 False: OFF
rule 62 AssignmentFunction: Expression "." IDENTIFIER "=" Expression
rule 63 Call: IDENTIFIER Lambda
rule 64 Call: IDENTIFIER Arguments Lambda
rule 65 Call: IDENTIFIER Arguments
rule 66 Call: Expression "." IDENTIFIER Arguments Lambda
rule 67 Call: Expression "." IDENTIFIER Arguments
rule 68 Call: Expression "." IDENTIFIER Lambda
rule 69 Call: Expression "." IDENTIFIER
rule 70 Call: Expression "." Operator Arguments
rule 71 Call: Expression "." "not"
rule 72 Arguments: "(" ")"
rule 73 Arguments: "(" ArgList ")"
rule 74 ArgList: Expression
rule 75 ArgList: ArgList "," Expression
rule 76 Lambda: "->" "{" Parameters Expressions "}"
rule 77 Defined: DEFINED "(" GetVariable ")"
rule 78 NamespaceAccess: CONSTANT "::" Expression
rule 79 NamespaceAccess: "::" Expression
rule 80 Operation: Expression "+" Expression
rule 81 Operation: Expression "-" Expression
rule 82 Operation: "-" Expression
rule 83 Operation: Expression "*" Expression
rule 84 Operation: Expression "**" Expression
rule 85 Operation: Expression "/" Expression
rule 86 Operation: Expression "%" Expression
rule 87 Operation: Expression ">" Expression
rule 88 Operation: Expression ">=" Expression
rule 89 Operation: Expression "<" Expression
rule 90 Operation: Expression "<=" Expression
rule 91 Operation: OperatorAssignment
rule 92 Operation: "not" Expression
rule 93 Operation: Expression "and" Expression
rule 94 Operation: Expression "or" Expression
rule 95 Operation: Expression "is" Expression
rule 96 Operation: Expression "isnt" Expression
rule 97 Operation: Expression "=~" Expression
rule 98 OperatorAssignment: CONSTANT "+=" Expression
rule 99 OperatorAssignment: GLOBAL "+=" Expression
rule 100 OperatorAssignment: CLASS_IDENTIFIER "+=" Expression
rule 101 OperatorAssignment: INSTANCE_IDENTIFIER "+=" Expression
rule 102 OperatorAssignment: IDENTIFIER "+=" Expression
rule 103 OperatorAssignment: CONSTANT "-=" Expression
rule 104 OperatorAssignment: GLOBAL "-=" Expression
rule 105 OperatorAssignment: CLASS_IDENTIFIER "-=" Expression
rule 106 OperatorAssignment: INSTANCE_IDENTIFIER "-=" Expression
rule 107 OperatorAssignment: IDENTIFIER "-=" Expression
rule 108 OperatorAssignment: CONSTANT "*=" Expression
rule 109 OperatorAssignment: GLOBAL "*=" Expression
rule 110 OperatorAssignment: CLASS_IDENTIFIER "*=" Expression
rule 111 OperatorAssignment: INSTANCE_IDENTIFIER "*=" Expression
rule 112 OperatorAssignment: IDENTIFIER "*=" Expression
rule 113 OperatorAssignment: CONSTANT "/=" Expression
rule 114 OperatorAssignment: GLOBAL "/=" Expression
rule 115 OperatorAssignment: CLASS_IDENTIFIER "/=" Expression
rule 116 OperatorAssignment: INSTANCE_IDENTIFIER "/=" Expression
rule 117 OperatorAssignment: IDENTIFIER "/=" Expression
rule 118 OperatorAssignment: CONSTANT "%=" Expression
rule 119 OperatorAssignment: GLOBAL "%=" Expression
rule 120 OperatorAssignment: CLASS_IDENTIFIER "%=" Expression
rule 121 OperatorAssignment: INSTANCE_IDENTIFIER "%=" Expression
rule 122 OperatorAssignment: IDENTIFIER "%=" Expression
rule 123 OperatorAssignment: CONSTANT "**=" Expression
rule 124 OperatorAssignment: GLOBAL "**=" Expression
rule 125 OperatorAssignment: CLASS_IDENTIFIER "**=" Expression
rule 126 OperatorAssignment: INSTANCE_IDENTIFIER "**=" Expression
rule 127 OperatorAssignment: IDENTIFIER "**=" Expression
rule 128 OperatorAssignment: IDENTIFIER ".=" IDENTIFIER Arguments Lambda
rule 129 OperatorAssignment: IDENTIFIER ".=" IDENTIFIER Arguments
rule 130 OperatorAssignment: IDENTIFIER ".=" IDENTIFIER
rule 131 SetVariable: CONSTANT "=" Literal
rule 132 SetVariable: GLOBAL "=" Expression
rule 133 SetVariable: CLASS_IDENTIFIER "=" Expression
rule 134 SetVariable: INSTANCE_IDENTIFIER "=" Expression
rule 135 SetVariable: IDENTIFIER "=" Expression
rule 136 DefMethod: IDENTIFIER MethodBlock
rule 137 DefMethod: CLASS_IDENTIFIER MethodBlock
rule 138 DefMethod: Operator MethodBlock
rule 139 DefMethod: "[" "]" "=" MethodBlock
rule 140 DefMethod: "[" "]" MethodBlock
rule 141 MethodBlock: DO Parameters Expressions END
rule 142 MethodBlock: DO Parameters END
rule 143 Operator: "+"
rule 144 Operator: "-"
rule 145 Operator: "*"
rule 146 Operator: "/"
rule 147 Operator: "%"
rule 148 Operator: "**"
rule 149 Operator: "[]"
rule 150 Operator: "[]="
rule 151 Operator: "and"
rule 152 Operator: "or"
rule 153 Operator: "not"
rule 154 Operator: "is"
rule 155 Operator: "isnt"
rule 156 Operator: ">"
rule 157 Operator: ">="
rule 158 Operator: "<="
rule 159 Operator: "<"
rule 160 Operator: "=~"
rule 161 Parameters: 
rule 162 Parameters: Terminator
rule 163 Parameters: "|" ParamList "|" Terminator
rule 164 Parameters: "|" ParamList "|"
rule 165 ParamList: Parameter
rule 166 ParamList: ParamList "," Parameter
rule 167 Parameter: IDENTIFIER
rule 168 Parameter: INSTANCE_IDENTIFIER
rule 169 Parameter: CLASS_IDENTIFIER
rule 170 Namespace: NAMESPACE CONSTANT Expressions END
rule 171 Namespace: NAMESPACE CONSTANT Terminator Expressions END
rule 172 Namespace: NAMESPACE CONSTANT END
rule 173 Class: CLASS CONSTANT Expressions END
rule 174 Class: CLASS CONSTANT Terminator Expressions END
rule 175 Class: CLASS CONSTANT END
rule 176 Class: CLASS CONSTANT Terminator END
rule 177 Class: CLASS CONSTANT "<" CONSTANT Expressions END
rule 178 Class: CLASS CONSTANT "<" CONSTANT Terminator Expressions END
rule 179 Class: CLASS CONSTANT "<" CONSTANT END
rule 180 Class: CLASS CONSTANT "<" CONSTANT Terminator END
rule 181 If: IF Expression Terminator Expressions END
rule 182 If: IF Expression Terminator Expressions Else
rule 183 Else: ELSE Terminator Expression Terminator END
rule 184 Else: ELSE Terminator Expressions END
rule 185 Else: ElseIf
rule 186 ElseIf: ELSIF Expression Terminator Expressions END
rule 187 ElseIf: ELSIF Expression Terminator Expressions Else
rule 188 While: WHILE Expression Terminator Expressions END
rule 189 Return: RETURN Expression
rule 190 Return: RETURN
rule 191 Property: PROPERTY IDENTIFIER
rule 192 Property: PROPERTY PropertyList
rule 193 PropertyList: IDENTIFIER IDENTIFIER
rule 194 PropertyList: PropertyList IDENTIFIER

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (74)
    on right: 
    on left : 
  Program (75)
    on right: 
    on left : 1 2
  Expressions (76)
    on right: 2 4 5 76 141 170 171 173 174 177 178 181 182 184 186 187 188
    on left : 3 4 5 6
  Expression (77)
    on right: 3 4 29 45 46 51 52 53 54 55 62 66 67 68 69 70 71 74 75 78 79 80 81 82 83 84 85 86 87 88 89 90 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 132 133 134 135 181 182 183 186 187 188 189
    on left : 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
  Terminator (78)
    on right: 4 5 6 7 48 49 52 53 162 163 171 174 176 178 180 181 182 183 184 186 187 188
    on left : 7 8
  Literal (79)
    on right: 9 131
    on left : 35 36 37 38 39 40 41
  AssignmentFunction (80)
    on right: 10
    on left : 62
  Call (81)
    on right: 11
    on left : 63 64 65 66 67 68 69 70 71
  KeyValExpression (82)
    on right: 14
    on left : 55
  ListExpression (83)
    on right: 15
    on left : 44 45 46
  NamespaceAccess (84)
    on right: 16
    on left : 78 79
  Defined (85)
    on right: 17
    on left : 77
  DefMethod (86)
    on right: 18
    on left : 136 137 138 139 140
  Operation (87)
    on right: 19
    on left : 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97
  SetVariable (88)
    on right: 20
    on left : 131 132 133 134 135
  GetVariable (89)
    on right: 21 77
    on left : 30 31 32 33 34
  Namespace (90)
    on right: 22
    on left : 170 171 172
  Class (91)
    on right: 23
    on left : 173 174 175 176 177 178 179 180
  If (92)
    on right: 24
    on left : 181 182
  While (93)
    on right: 25
    on left : 188
  Return (94)
    on right: 26
    on left : 189 190
  Property (95)
    on right: 27
    on left : 191 192
  Lambda (96)
    on right: 28 63 64 66 68 128
    on left : 76
  True (97)
    on right: 38
    on left : 56 57 58
  False (98)
    on right: 39
    on left : 59 60 61
  Regex (99)
    on right: 41
    on left : 42 43
  List (100)
    on right: 44
    on left : 47 48 49 50
  ExpressionList (101)
    on right: 48 49 50 52 53 54
    on left : 51 52 53 54
  Arguments (102)
    on right: 64 65 66 67 70 128 129
    on left : 72 73
  Operator (103)
    on right: 70 138
    on left : 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160
  ArgList (104)
    on right: 73 75
    on left : 74 75
  Parameters (105)
    on right: 76 141 142
    on left : 161 162 163 164
  OperatorAssignment (106)
    on right: 91
    on left : 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130
  MethodBlock (107)
    on right: 136 137 138 139 140
    on left : 141 142
  ParamList (108)
    on right: 163 164 166
    on left : 165 166
  Parameter (109)
    on right: 165 166
    on left : 167 168 169
  Else (110)
    on right: 182 187
    on left : 183 184 185
  ElseIf (111)
    on right: 185
    on left : 186 187
  PropertyList (112)
    on right: 192 194
    on left : 193 194

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  DO (2) 141 142
  END (3) 141 142 170 171 172 173 174 175 176 177 178 179 180 181 183 184 186 188
  CLASS (4) 173 174 175 176 177 178 179 180
  LOAD (5) 
  IF (6) 181 182
  WHILE (7) 188
  NAMESPACE (8) 170 171 172
  ELSE (9) 183 184
  ELSIF (10) 186 187
  RETURN (11) 189 190
  BREAK (12) 
  NEXT (13) 13
  TRUE (14) 56
  YES (15) 57
  ON (16) 58
  FALSE (17) 59
  NO (18) 60
  OFF (19) 61
  NIL (20) 40
  SELF (21) 12
  DEFINED (22) 77
  PROPERTY (23) 191 192
  CONSTANT (24) 30 78 98 103 108 113 118 123 131 170 171 172 173 174 175 176 177 178 179 180
  GLOBAL (25) 31 99 104 109 114 119 124 132
  CLASS_IDENTIFIER (26) 32 100 105 110 115 120 125 133 137 169
  INSTANCE_IDENTIFIER (27) 33 101 106 111 116 121 126 134 168
  IDENTIFIER (28) 34 62 63 64 65 66 67 68 69 102 107 112 117 122 127 128 129 130 135 136 167 191 193 194
  FLOAT (29) 36
  NUMBER (30) 35
  STRING (31) 37
  TERMINATOR (32) 7 8
  EOF (33) 2
  REGEX (34) 42 43
  REGEX_FLAGS (35) 42
  "." (36) 62 66 67 68 69 70 71
  "**" (37) 84 148
  "*" (38) 83 145
  "/" (39) 85 146
  "%" (40) 86 147
  "+" (41) 80 143
  "-" (42) 81 82 144
  ">" (43) 87 156
  "<" (44) 89 159 177 178 179 180
  ">=" (45) 88 157
  "<=" (46) 90 158
  "is" (47) 95 154
  "isnt" (48) 96 155
  "not" (49) 71 92 153
  "and" (50) 93 151
  "or" (51) 94 152
  "=" (52) 45 62 131 132 133 134 135 139
  "*=" (53) 108 109 110 111 112
  "/=" (54) 113 114 115 116 117
  "%=" (55) 118 119 120 121 122
  "+=" (56) 98 99 100 101 102
  "-=" (57) 103 104 105 106 107
  "**=" (58) 123 124 125 126 127
  "(" (59) 29 72 73 77
  ")" (60) 29 72 73 77
  "[" (61) 45 46 47 48 49 50 139 140
  "]" (62) 45 46 47 48 49 50 139 140
  "," (63) 52 53 54 75 166
  "=>" (64) 55
  "->" (65) 76
  "{" (66) 76
  "}" (67) 76
  "::" (68) 78 79
  "=~" (69) 97 160
  ".=" (70) 128 129 130
  "[]" (71) 149
  "[]=" (72) 150
  "|" (73) 163 164

--------- State ---------

state 0


  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61
  $default      reduce using rule 1 (Program)

  Program       go to state 1
  Expressions   go to state 2
  Expression    go to state 3
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 1


  $end          shift, and go to state 77


state 2

   2) Program : Expressions _ EOF
   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator

  TERMINATOR    shift, and go to state 5
  EOF           shift, and go to state 78

  Terminator    go to state 79

state 3

   3) Expressions : Expression _
  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "=>"          shift, and go to state 81
  "=~"          shift, and go to state 97
  $default      reduce using rule 3 (Expressions)


state 4

   6) Expressions : Terminator _

  $default      reduce using rule 6 (Expressions)


state 5

   7) Terminator : TERMINATOR _ Terminator
   8) Terminator : TERMINATOR _

  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 8 (Terminator)]
  $default      reduce using rule 8 (Terminator)

  Terminator    go to state 98

state 6

   9) Expression : Literal _

  $default      reduce using rule 9 (Expression)


state 7

  10) Expression : AssignmentFunction _

  $default      reduce using rule 10 (Expression)


state 8

  11) Expression : Call _

  $default      reduce using rule 11 (Expression)


state 9

  12) Expression : SELF _

  $default      reduce using rule 12 (Expression)


state 10

  13) Expression : NEXT _

  $default      reduce using rule 13 (Expression)


state 11

  14) Expression : KeyValExpression _

  $default      reduce using rule 14 (Expression)


state 12

  15) Expression : ListExpression _

  $default      reduce using rule 15 (Expression)


state 13

  16) Expression : NamespaceAccess _

  $default      reduce using rule 16 (Expression)


state 14

  17) Expression : Defined _

  $default      reduce using rule 17 (Expression)


state 15

  18) Expression : DefMethod _

  $default      reduce using rule 18 (Expression)


state 16

  19) Expression : Operation _

  $default      reduce using rule 19 (Expression)


state 17

  20) Expression : SetVariable _

  $default      reduce using rule 20 (Expression)


state 18

  21) Expression : GetVariable _

  $default      reduce using rule 21 (Expression)


state 19

  22) Expression : Namespace _

  $default      reduce using rule 22 (Expression)


state 20

  23) Expression : Class _

  $default      reduce using rule 23 (Expression)


state 21

  24) Expression : If _

  $default      reduce using rule 24 (Expression)


state 22

  25) Expression : While _

  $default      reduce using rule 25 (Expression)


state 23

  26) Expression : Return _

  $default      reduce using rule 26 (Expression)


state 24

  27) Expression : Property _

  $default      reduce using rule 27 (Expression)


state 25

  28) Expression : Lambda _

  $default      reduce using rule 28 (Expression)


state 26

  29) Expression : "(" _ Expression ")"

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  Expression    go to state 99
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 27

  30) GetVariable : CONSTANT _
  78) NamespaceAccess : CONSTANT _ "::" Expression
  98) OperatorAssignment : CONSTANT _ "+=" Expression
 103) OperatorAssignment : CONSTANT _ "-=" Expression
 108) OperatorAssignment : CONSTANT _ "*=" Expression
 113) OperatorAssignment : CONSTANT _ "/=" Expression
 118) OperatorAssignment : CONSTANT _ "%=" Expression
 123) OperatorAssignment : CONSTANT _ "**=" Expression
 131) SetVariable : CONSTANT _ "=" Literal

  "="           shift, and go to state 107
  "*="          shift, and go to state 103
  "/="          shift, and go to state 104
  "%="          shift, and go to state 105
  "+="          shift, and go to state 101
  "-="          shift, and go to state 102
  "**="         shift, and go to state 106
  "::"          shift, and go to state 100
  $default      reduce using rule 30 (GetVariable)


state 28

  31) GetVariable : GLOBAL _
  99) OperatorAssignment : GLOBAL _ "+=" Expression
 104) OperatorAssignment : GLOBAL _ "-=" Expression
 109) OperatorAssignment : GLOBAL _ "*=" Expression
 114) OperatorAssignment : GLOBAL _ "/=" Expression
 119) OperatorAssignment : GLOBAL _ "%=" Expression
 124) OperatorAssignment : GLOBAL _ "**=" Expression
 132) SetVariable : GLOBAL _ "=" Expression

  "="           shift, and go to state 114
  "*="          shift, and go to state 110
  "/="          shift, and go to state 111
  "%="          shift, and go to state 112
  "+="          shift, and go to state 108
  "-="          shift, and go to state 109
  "**="         shift, and go to state 113
  $default      reduce using rule 31 (GetVariable)


state 29

  32) GetVariable : CLASS_IDENTIFIER _
 100) OperatorAssignment : CLASS_IDENTIFIER _ "+=" Expression
 105) OperatorAssignment : CLASS_IDENTIFIER _ "-=" Expression
 110) OperatorAssignment : CLASS_IDENTIFIER _ "*=" Expression
 115) OperatorAssignment : CLASS_IDENTIFIER _ "/=" Expression
 120) OperatorAssignment : CLASS_IDENTIFIER _ "%=" Expression
 125) OperatorAssignment : CLASS_IDENTIFIER _ "**=" Expression
 133) SetVariable : CLASS_IDENTIFIER _ "=" Expression
 137) DefMethod : CLASS_IDENTIFIER _ MethodBlock

  DO            shift, and go to state 123
  "="           shift, and go to state 121
  "*="          shift, and go to state 117
  "/="          shift, and go to state 118
  "%="          shift, and go to state 119
  "+="          shift, and go to state 115
  "-="          shift, and go to state 116
  "**="         shift, and go to state 120
  $default      reduce using rule 32 (GetVariable)

  MethodBlock   go to state 122

state 30

  33) GetVariable : INSTANCE_IDENTIFIER _
 101) OperatorAssignment : INSTANCE_IDENTIFIER _ "+=" Expression
 106) OperatorAssignment : INSTANCE_IDENTIFIER _ "-=" Expression
 111) OperatorAssignment : INSTANCE_IDENTIFIER _ "*=" Expression
 116) OperatorAssignment : INSTANCE_IDENTIFIER _ "/=" Expression
 121) OperatorAssignment : INSTANCE_IDENTIFIER _ "%=" Expression
 126) OperatorAssignment : INSTANCE_IDENTIFIER _ "**=" Expression
 134) SetVariable : INSTANCE_IDENTIFIER _ "=" Expression

  "="           shift, and go to state 130
  "*="          shift, and go to state 126
  "/="          shift, and go to state 127
  "%="          shift, and go to state 128
  "+="          shift, and go to state 124
  "-="          shift, and go to state 125
  "**="         shift, and go to state 129
  $default      reduce using rule 33 (GetVariable)


state 31

  34) GetVariable : IDENTIFIER _
  63) Call : IDENTIFIER _ Lambda
  64) Call : IDENTIFIER _ Arguments Lambda
  65) Call : IDENTIFIER _ Arguments
 102) OperatorAssignment : IDENTIFIER _ "+=" Expression
 107) OperatorAssignment : IDENTIFIER _ "-=" Expression
 112) OperatorAssignment : IDENTIFIER _ "*=" Expression
 117) OperatorAssignment : IDENTIFIER _ "/=" Expression
 122) OperatorAssignment : IDENTIFIER _ "%=" Expression
 127) OperatorAssignment : IDENTIFIER _ "**=" Expression
 128) OperatorAssignment : IDENTIFIER _ ".=" IDENTIFIER Arguments Lambda
 129) OperatorAssignment : IDENTIFIER _ ".=" IDENTIFIER Arguments
 130) OperatorAssignment : IDENTIFIER _ ".=" IDENTIFIER
 135) SetVariable : IDENTIFIER _ "=" Expression
 136) DefMethod : IDENTIFIER _ MethodBlock

  DO            shift, and go to state 123
  "="           shift, and go to state 141
  "*="          shift, and go to state 136
  "/="          shift, and go to state 137
  "%="          shift, and go to state 138
  "+="          shift, and go to state 134
  "-="          shift, and go to state 135
  "**="         shift, and go to state 139
  "("           shift, and go to state 133
  "->"          shift, and go to state 48
  ".="          shift, and go to state 140
  $default      reduce using rule 34 (GetVariable)

  Lambda        go to state 131
  Arguments     go to state 132
  MethodBlock   go to state 142

state 32

  35) Literal : NUMBER _

  $default      reduce using rule 35 (Literal)


state 33

  36) Literal : FLOAT _

  $default      reduce using rule 36 (Literal)


state 34

  37) Literal : STRING _

  $default      reduce using rule 37 (Literal)


state 35

  38) Literal : True _

  $default      reduce using rule 38 (Literal)


state 36

  39) Literal : False _

  $default      reduce using rule 39 (Literal)


state 37

  40) Literal : NIL _

  $default      reduce using rule 40 (Literal)


state 38

  41) Literal : Regex _

  $default      reduce using rule 41 (Literal)


state 39

  42) Regex : REGEX _ REGEX_FLAGS
  43) Regex : REGEX _

  REGEX_FLAGS   shift, and go to state 143
  $default      reduce using rule 43 (Regex)


state 40

  44) ListExpression : List _

  $default      reduce using rule 44 (ListExpression)


state 41

  47) List : "[" _ "]"
  48) List : "[" _ Terminator ExpressionList "]"
  49) List : "[" _ Terminator ExpressionList Terminator "]"
  50) List : "[" _ ExpressionList "]"
 139) DefMethod : "[" _ "]" "=" MethodBlock
 140) DefMethod : "[" _ "]" MethodBlock

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "]"           shift, and go to state 145
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 144
  Terminator    go to state 146
  ExpressionList  go to state 147
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 42

  56) True : TRUE _

  $default      reduce using rule 56 (True)


state 43

  57) True : YES _

  $default      reduce using rule 57 (True)


state 44

  58) True : ON _

  $default      reduce using rule 58 (True)


state 45

  59) False : FALSE _

  $default      reduce using rule 59 (False)


state 46

  60) False : NO _

  $default      reduce using rule 60 (False)


state 47

  61) False : OFF _

  $default      reduce using rule 61 (False)


state 48

  76) Lambda : "->" _ "{" Parameters Expressions "}"

  "{"           shift, and go to state 148


state 49

  77) Defined : DEFINED _ "(" GetVariable ")"

  "("           shift, and go to state 149


state 50

  79) NamespaceAccess : "::" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 150
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 51

  82) Operation : "-" _ Expression
 144) Operator : "-" _

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61
  $default      reduce using rule 144 (Operator)

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 151
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 52

  91) Operation : OperatorAssignment _

  $default      reduce using rule 91 (Operation)


state 53

  92) Operation : "not" _ Expression
 153) Operator : "not" _

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61
  $default      reduce using rule 153 (Operator)

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 152
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 54

 138) DefMethod : Operator _ MethodBlock

  DO            shift, and go to state 123

  MethodBlock   go to state 153

state 55

 143) Operator : "+" _

  $default      reduce using rule 143 (Operator)


state 56

 145) Operator : "*" _

  $default      reduce using rule 145 (Operator)


state 57

 146) Operator : "/" _

  $default      reduce using rule 146 (Operator)


state 58

 147) Operator : "%" _

  $default      reduce using rule 147 (Operator)


state 59

 148) Operator : "**" _

  $default      reduce using rule 148 (Operator)


state 60

 149) Operator : "[]" _

  $default      reduce using rule 149 (Operator)


state 61

 150) Operator : "[]=" _

  $default      reduce using rule 150 (Operator)


state 62

 151) Operator : "and" _

  $default      reduce using rule 151 (Operator)


state 63

 152) Operator : "or" _

  $default      reduce using rule 152 (Operator)


state 64

 154) Operator : "is" _

  $default      reduce using rule 154 (Operator)


state 65

 155) Operator : "isnt" _

  $default      reduce using rule 155 (Operator)


state 66

 156) Operator : ">" _

  $default      reduce using rule 156 (Operator)


state 67

 157) Operator : ">=" _

  $default      reduce using rule 157 (Operator)


state 68

 158) Operator : "<=" _

  $default      reduce using rule 158 (Operator)


state 69

 159) Operator : "<" _

  $default      reduce using rule 159 (Operator)


state 70

 160) Operator : "=~" _

  $default      reduce using rule 160 (Operator)


state 71

 170) Namespace : NAMESPACE _ CONSTANT Expressions END
 171) Namespace : NAMESPACE _ CONSTANT Terminator Expressions END
 172) Namespace : NAMESPACE _ CONSTANT END

  CONSTANT      shift, and go to state 154


state 72

 173) Class : CLASS _ CONSTANT Expressions END
 174) Class : CLASS _ CONSTANT Terminator Expressions END
 175) Class : CLASS _ CONSTANT END
 176) Class : CLASS _ CONSTANT Terminator END
 177) Class : CLASS _ CONSTANT "<" CONSTANT Expressions END
 178) Class : CLASS _ CONSTANT "<" CONSTANT Terminator Expressions END
 179) Class : CLASS _ CONSTANT "<" CONSTANT END
 180) Class : CLASS _ CONSTANT "<" CONSTANT Terminator END

  CONSTANT      shift, and go to state 155


state 73

 181) If : IF _ Expression Terminator Expressions END
 182) If : IF _ Expression Terminator Expressions Else

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 156
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 74

 188) While : WHILE _ Expression Terminator Expressions END

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 157
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 75

 189) Return : RETURN _ Expression
 190) Return : RETURN _

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "**"          [reduce using rule 190 (Return)]
  "*"           shift, and go to state 56
  "*"           [reduce using rule 190 (Return)]
  "/"           shift, and go to state 57
  "/"           [reduce using rule 190 (Return)]
  "%"           shift, and go to state 58
  "%"           [reduce using rule 190 (Return)]
  "+"           shift, and go to state 55
  "+"           [reduce using rule 190 (Return)]
  "-"           shift, and go to state 51
  "-"           [reduce using rule 190 (Return)]
  ">"           shift, and go to state 66
  ">"           [reduce using rule 190 (Return)]
  "<"           shift, and go to state 69
  "<"           [reduce using rule 190 (Return)]
  ">="          shift, and go to state 67
  ">="          [reduce using rule 190 (Return)]
  "<="          shift, and go to state 68
  "<="          [reduce using rule 190 (Return)]
  "is"          shift, and go to state 64
  "is"          [reduce using rule 190 (Return)]
  "isnt"        shift, and go to state 65
  "isnt"        [reduce using rule 190 (Return)]
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "and"         [reduce using rule 190 (Return)]
  "or"          shift, and go to state 63
  "or"          [reduce using rule 190 (Return)]
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "["           [reduce using rule 190 (Return)]
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "=~"          [reduce using rule 190 (Return)]
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61
  $default      reduce using rule 190 (Return)

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 158
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 76

 191) Property : PROPERTY _ IDENTIFIER
 192) Property : PROPERTY _ PropertyList

  IDENTIFIER    shift, and go to state 159

  PropertyList  go to state 160

state 77


  $end          shift, and go to state 161


state 78

   2) Program : Expressions EOF _

  $default      reduce using rule 2 (Program)


state 79

   4) Expressions : Expressions Terminator _ Expression
   5) Expressions : Expressions Terminator _

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61
  $default      reduce using rule 5 (Expressions)

  Expression    go to state 162
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 80

  45) ListExpression : Expression "[" _ Expression "]" "=" Expression
  46) ListExpression : Expression "[" _ Expression "]"

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 163
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 81

  55) KeyValExpression : Expression "=>" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 164
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 82

  62) AssignmentFunction : Expression "." _ IDENTIFIER "=" Expression
  66) Call : Expression "." _ IDENTIFIER Arguments Lambda
  67) Call : Expression "." _ IDENTIFIER Arguments
  68) Call : Expression "." _ IDENTIFIER Lambda
  69) Call : Expression "." _ IDENTIFIER
  70) Call : Expression "." _ Operator Arguments
  71) Call : Expression "." _ "not"

  IDENTIFIER    shift, and go to state 165
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 168
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 167
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Operator      go to state 166

state 83

  80) Operation : Expression "+" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 169
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 84

  81) Operation : Expression "-" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 170
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 85

  83) Operation : Expression "*" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 171
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 86

  84) Operation : Expression "**" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 172
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 87

  85) Operation : Expression "/" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 173
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 88

  86) Operation : Expression "%" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 174
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 89

  87) Operation : Expression ">" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 175
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 90

  88) Operation : Expression ">=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 176
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 91

  89) Operation : Expression "<" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 177
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 92

  90) Operation : Expression "<=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 178
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 93

  93) Operation : Expression "and" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 179
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 94

  94) Operation : Expression "or" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 180
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 95

  95) Operation : Expression "is" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 181
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 96

  96) Operation : Expression "isnt" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 182
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 97

  97) Operation : Expression "=~" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 183
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 98

   7) Terminator : TERMINATOR Terminator _

  $default      reduce using rule 7 (Terminator)


state 99

  29) Expression : "(" Expression _ ")"
  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  ")"           shift, and go to state 184
  "["           shift, and go to state 80
  "=>"          shift, and go to state 81
  "=~"          shift, and go to state 97


state 100

  78) NamespaceAccess : CONSTANT "::" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 185
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 101

  98) OperatorAssignment : CONSTANT "+=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 186
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 102

 103) OperatorAssignment : CONSTANT "-=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 187
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 103

 108) OperatorAssignment : CONSTANT "*=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 188
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 104

 113) OperatorAssignment : CONSTANT "/=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 189
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 105

 118) OperatorAssignment : CONSTANT "%=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 190
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 106

 123) OperatorAssignment : CONSTANT "**=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 191
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 107

 131) SetVariable : CONSTANT "=" _ Literal

  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39

  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  Literal       go to state 192

state 108

  99) OperatorAssignment : GLOBAL "+=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 193
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 109

 104) OperatorAssignment : GLOBAL "-=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 194
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 110

 109) OperatorAssignment : GLOBAL "*=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 195
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 111

 114) OperatorAssignment : GLOBAL "/=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 196
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 112

 119) OperatorAssignment : GLOBAL "%=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 197
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 113

 124) OperatorAssignment : GLOBAL "**=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 198
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 114

 132) SetVariable : GLOBAL "=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 199
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 115

 100) OperatorAssignment : CLASS_IDENTIFIER "+=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 200
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 116

 105) OperatorAssignment : CLASS_IDENTIFIER "-=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 201
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 117

 110) OperatorAssignment : CLASS_IDENTIFIER "*=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 202
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 118

 115) OperatorAssignment : CLASS_IDENTIFIER "/=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 203
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 119

 120) OperatorAssignment : CLASS_IDENTIFIER "%=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 204
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 120

 125) OperatorAssignment : CLASS_IDENTIFIER "**=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 205
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 121

 133) SetVariable : CLASS_IDENTIFIER "=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 206
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 122

 137) DefMethod : CLASS_IDENTIFIER MethodBlock _

  $default      reduce using rule 137 (DefMethod)


state 123

 141) MethodBlock : DO _ Parameters Expressions END
 142) MethodBlock : DO _ Parameters END

  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 161 (Parameters)]
  "|"           shift, and go to state 209
  $default      reduce using rule 161 (Parameters)

  Parameters    go to state 207
  Terminator    go to state 208

state 124

 101) OperatorAssignment : INSTANCE_IDENTIFIER "+=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 210
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 125

 106) OperatorAssignment : INSTANCE_IDENTIFIER "-=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 211
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 126

 111) OperatorAssignment : INSTANCE_IDENTIFIER "*=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 212
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 127

 116) OperatorAssignment : INSTANCE_IDENTIFIER "/=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 213
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 128

 121) OperatorAssignment : INSTANCE_IDENTIFIER "%=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 214
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 129

 126) OperatorAssignment : INSTANCE_IDENTIFIER "**=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 215
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 130

 134) SetVariable : INSTANCE_IDENTIFIER "=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 216
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 131

  63) Call : IDENTIFIER Lambda _

  $default      reduce using rule 63 (Call)


state 132

  64) Call : IDENTIFIER Arguments _ Lambda
  65) Call : IDENTIFIER Arguments _

  "->"          shift, and go to state 48
  $default      reduce using rule 65 (Call)

  Lambda        go to state 217

state 133

  72) Arguments : "(" _ ")"
  73) Arguments : "(" _ ArgList ")"

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  ")"           shift, and go to state 219
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 218
  ArgList       go to state 220
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 134

 102) OperatorAssignment : IDENTIFIER "+=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 221
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 135

 107) OperatorAssignment : IDENTIFIER "-=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 222
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 136

 112) OperatorAssignment : IDENTIFIER "*=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 223
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 137

 117) OperatorAssignment : IDENTIFIER "/=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 224
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 138

 122) OperatorAssignment : IDENTIFIER "%=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 225
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 139

 127) OperatorAssignment : IDENTIFIER "**=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 226
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 140

 128) OperatorAssignment : IDENTIFIER ".=" _ IDENTIFIER Arguments Lambda
 129) OperatorAssignment : IDENTIFIER ".=" _ IDENTIFIER Arguments
 130) OperatorAssignment : IDENTIFIER ".=" _ IDENTIFIER

  IDENTIFIER    shift, and go to state 227


state 141

 135) SetVariable : IDENTIFIER "=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 228
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 142

 136) DefMethod : IDENTIFIER MethodBlock _

  $default      reduce using rule 136 (DefMethod)


state 143

  42) Regex : REGEX REGEX_FLAGS _

  $default      reduce using rule 42 (Regex)


state 144

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  51) ExpressionList : Expression _
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "=>"          shift, and go to state 81
  "=~"          shift, and go to state 97
  $default      reduce using rule 51 (ExpressionList)


state 145

  47) List : "[" "]" _
 139) DefMethod : "[" "]" _ "=" MethodBlock
 140) DefMethod : "[" "]" _ MethodBlock

  DO            shift, and go to state 123
  "="           shift, and go to state 229
  $default      reduce using rule 47 (List)

  MethodBlock   go to state 230

state 146

  48) List : "[" Terminator _ ExpressionList "]"
  49) List : "[" Terminator _ ExpressionList Terminator "]"

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 144
  ExpressionList  go to state 231
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 147

  50) List : "[" ExpressionList _ "]"
  52) ExpressionList : ExpressionList _ "," Terminator Expression
  53) ExpressionList : ExpressionList _ Terminator "," Expression
  54) ExpressionList : ExpressionList _ "," Expression

  TERMINATOR    shift, and go to state 5
  "]"           shift, and go to state 232
  ","           shift, and go to state 233

  Terminator    go to state 234

state 148

  76) Lambda : "->" "{" _ Parameters Expressions "}"

  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 161 (Parameters)]
  "|"           shift, and go to state 209
  $default      reduce using rule 161 (Parameters)

  Parameters    go to state 235
  Terminator    go to state 208

state 149

  77) Defined : DEFINED "(" _ GetVariable ")"

  CONSTANT      shift, and go to state 236
  GLOBAL        shift, and go to state 237
  CLASS_IDENTIFIER  shift, and go to state 238
  INSTANCE_IDENTIFIER  shift, and go to state 239
  IDENTIFIER    shift, and go to state 240

  GetVariable   go to state 241

state 150

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  79) NamespaceAccess : "::" Expression _
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "."           [reduce using rule 79 (NamespaceAccess)]
  "**"          shift, and go to state 86
  "**"          [reduce using rule 79 (NamespaceAccess)]
  "*"           shift, and go to state 85
  "*"           [reduce using rule 79 (NamespaceAccess)]
  "/"           shift, and go to state 87
  "/"           [reduce using rule 79 (NamespaceAccess)]
  "%"           shift, and go to state 88
  "%"           [reduce using rule 79 (NamespaceAccess)]
  "+"           shift, and go to state 83
  "+"           [reduce using rule 79 (NamespaceAccess)]
  "-"           shift, and go to state 84
  "-"           [reduce using rule 79 (NamespaceAccess)]
  ">"           shift, and go to state 89
  ">"           [reduce using rule 79 (NamespaceAccess)]
  "<"           shift, and go to state 91
  "<"           [reduce using rule 79 (NamespaceAccess)]
  ">="          shift, and go to state 90
  ">="          [reduce using rule 79 (NamespaceAccess)]
  "<="          shift, and go to state 92
  "<="          [reduce using rule 79 (NamespaceAccess)]
  "is"          shift, and go to state 95
  "is"          [reduce using rule 79 (NamespaceAccess)]
  "isnt"        shift, and go to state 96
  "isnt"        [reduce using rule 79 (NamespaceAccess)]
  "and"         shift, and go to state 93
  "and"         [reduce using rule 79 (NamespaceAccess)]
  "or"          shift, and go to state 94
  "or"          [reduce using rule 79 (NamespaceAccess)]
  "["           shift, and go to state 80
  "["           [reduce using rule 79 (NamespaceAccess)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 79 (NamespaceAccess)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 79 (NamespaceAccess)]
  $default      reduce using rule 79 (NamespaceAccess)


state 151

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  82) Operation : "-" Expression _
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "["           shift, and go to state 80
  "["           [reduce using rule 82 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 82 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 82 (Operation)]
  $default      reduce using rule 82 (Operation)


state 152

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  92) Operation : "not" Expression _
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "["           shift, and go to state 80
  "["           [reduce using rule 92 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 92 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 92 (Operation)]
  $default      reduce using rule 92 (Operation)


state 153

 138) DefMethod : Operator MethodBlock _

  $default      reduce using rule 138 (DefMethod)


state 154

 170) Namespace : NAMESPACE CONSTANT _ Expressions END
 171) Namespace : NAMESPACE CONSTANT _ Terminator Expressions END
 172) Namespace : NAMESPACE CONSTANT _ END

  END           shift, and go to state 244
  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Expression    go to state 3
  Expressions   go to state 242
  Terminator    go to state 243
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 155

 173) Class : CLASS CONSTANT _ Expressions END
 174) Class : CLASS CONSTANT _ Terminator Expressions END
 175) Class : CLASS CONSTANT _ END
 176) Class : CLASS CONSTANT _ Terminator END
 177) Class : CLASS CONSTANT _ "<" CONSTANT Expressions END
 178) Class : CLASS CONSTANT _ "<" CONSTANT Terminator Expressions END
 179) Class : CLASS CONSTANT _ "<" CONSTANT END
 180) Class : CLASS CONSTANT _ "<" CONSTANT Terminator END

  END           shift, and go to state 248
  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 247
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Expression    go to state 3
  Expressions   go to state 245
  Terminator    go to state 246
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 156

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 181) If : IF Expression _ Terminator Expressions END
 182) If : IF Expression _ Terminator Expressions Else

  TERMINATOR    shift, and go to state 5
  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "=>"          shift, and go to state 81
  "=~"          shift, and go to state 97

  Terminator    go to state 249

state 157

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 188) While : WHILE Expression _ Terminator Expressions END

  TERMINATOR    shift, and go to state 5
  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "=>"          shift, and go to state 81
  "=~"          shift, and go to state 97

  Terminator    go to state 250

state 158

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 189) Return : RETURN Expression _

  "."           shift, and go to state 82
  "."           [reduce using rule 189 (Return)]
  "**"          shift, and go to state 86
  "**"          [reduce using rule 189 (Return)]
  "*"           shift, and go to state 85
  "*"           [reduce using rule 189 (Return)]
  "/"           shift, and go to state 87
  "/"           [reduce using rule 189 (Return)]
  "%"           shift, and go to state 88
  "%"           [reduce using rule 189 (Return)]
  "+"           shift, and go to state 83
  "+"           [reduce using rule 189 (Return)]
  "-"           shift, and go to state 84
  "-"           [reduce using rule 189 (Return)]
  ">"           shift, and go to state 89
  ">"           [reduce using rule 189 (Return)]
  "<"           shift, and go to state 91
  "<"           [reduce using rule 189 (Return)]
  ">="          shift, and go to state 90
  ">="          [reduce using rule 189 (Return)]
  "<="          shift, and go to state 92
  "<="          [reduce using rule 189 (Return)]
  "is"          shift, and go to state 95
  "is"          [reduce using rule 189 (Return)]
  "isnt"        shift, and go to state 96
  "isnt"        [reduce using rule 189 (Return)]
  "and"         shift, and go to state 93
  "and"         [reduce using rule 189 (Return)]
  "or"          shift, and go to state 94
  "or"          [reduce using rule 189 (Return)]
  "["           shift, and go to state 80
  "["           [reduce using rule 189 (Return)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 189 (Return)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 189 (Return)]
  $default      reduce using rule 189 (Return)


state 159

 191) Property : PROPERTY IDENTIFIER _
 193) PropertyList : IDENTIFIER _ IDENTIFIER

  IDENTIFIER    shift, and go to state 251
  $default      reduce using rule 191 (Property)


state 160

 192) Property : PROPERTY PropertyList _
 194) PropertyList : PropertyList _ IDENTIFIER

  IDENTIFIER    shift, and go to state 252
  $default      reduce using rule 192 (Property)


state 161


  $default      accept


state 162

   4) Expressions : Expressions Terminator Expression _
  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "=>"          shift, and go to state 81
  "=~"          shift, and go to state 97
  $default      reduce using rule 4 (Expressions)


state 163

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  45) ListExpression : Expression "[" Expression _ "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  46) ListExpression : Expression "[" Expression _ "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "]"           shift, and go to state 253
  "=>"          shift, and go to state 81
  "=~"          shift, and go to state 97


state 164

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  55) KeyValExpression : Expression "=>" Expression _
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "."           [reduce using rule 55 (KeyValExpression)]
  "**"          shift, and go to state 86
  "**"          [reduce using rule 55 (KeyValExpression)]
  "*"           shift, and go to state 85
  "*"           [reduce using rule 55 (KeyValExpression)]
  "/"           shift, and go to state 87
  "/"           [reduce using rule 55 (KeyValExpression)]
  "%"           shift, and go to state 88
  "%"           [reduce using rule 55 (KeyValExpression)]
  "+"           shift, and go to state 83
  "+"           [reduce using rule 55 (KeyValExpression)]
  "-"           shift, and go to state 84
  "-"           [reduce using rule 55 (KeyValExpression)]
  ">"           shift, and go to state 89
  ">"           [reduce using rule 55 (KeyValExpression)]
  "<"           shift, and go to state 91
  "<"           [reduce using rule 55 (KeyValExpression)]
  ">="          shift, and go to state 90
  ">="          [reduce using rule 55 (KeyValExpression)]
  "<="          shift, and go to state 92
  "<="          [reduce using rule 55 (KeyValExpression)]
  "is"          shift, and go to state 95
  "is"          [reduce using rule 55 (KeyValExpression)]
  "isnt"        shift, and go to state 96
  "isnt"        [reduce using rule 55 (KeyValExpression)]
  "and"         shift, and go to state 93
  "and"         [reduce using rule 55 (KeyValExpression)]
  "or"          shift, and go to state 94
  "or"          [reduce using rule 55 (KeyValExpression)]
  "["           shift, and go to state 80
  "["           [reduce using rule 55 (KeyValExpression)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 55 (KeyValExpression)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 55 (KeyValExpression)]
  $default      reduce using rule 55 (KeyValExpression)


state 165

  62) AssignmentFunction : Expression "." IDENTIFIER _ "=" Expression
  66) Call : Expression "." IDENTIFIER _ Arguments Lambda
  67) Call : Expression "." IDENTIFIER _ Arguments
  68) Call : Expression "." IDENTIFIER _ Lambda
  69) Call : Expression "." IDENTIFIER _

  "="           shift, and go to state 254
  "("           shift, and go to state 133
  "->"          shift, and go to state 48
  $default      reduce using rule 69 (Call)

  Arguments     go to state 255
  Lambda        go to state 256

state 166

  70) Call : Expression "." Operator _ Arguments

  "("           shift, and go to state 133

  Arguments     go to state 257

state 167

  71) Call : Expression "." "not" _
 153) Operator : "not" _

  "("           reduce using rule 153 (Operator)
  $default      reduce using rule 71 (Call)


state 168

 144) Operator : "-" _

  $default      reduce using rule 144 (Operator)


state 169

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  80) Operation : Expression "+" Expression _
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "["           shift, and go to state 80
  "["           [reduce using rule 80 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 80 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 80 (Operation)]
  $default      reduce using rule 80 (Operation)


state 170

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  81) Operation : Expression "-" Expression _
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "["           shift, and go to state 80
  "["           [reduce using rule 81 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 81 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 81 (Operation)]
  $default      reduce using rule 81 (Operation)


state 171

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  83) Operation : Expression "*" Expression _
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "["           shift, and go to state 80
  "["           [reduce using rule 83 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 83 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 83 (Operation)]
  $default      reduce using rule 83 (Operation)


state 172

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  84) Operation : Expression "**" Expression _
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "["           shift, and go to state 80
  "["           [reduce using rule 84 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 84 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 84 (Operation)]
  $default      reduce using rule 84 (Operation)


state 173

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  85) Operation : Expression "/" Expression _
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "["           shift, and go to state 80
  "["           [reduce using rule 85 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 85 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 85 (Operation)]
  $default      reduce using rule 85 (Operation)


state 174

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  86) Operation : Expression "%" Expression _
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "["           shift, and go to state 80
  "["           [reduce using rule 86 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 86 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 86 (Operation)]
  $default      reduce using rule 86 (Operation)


state 175

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  87) Operation : Expression ">" Expression _
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  "["           shift, and go to state 80
  "["           [reduce using rule 87 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 87 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 87 (Operation)]
  $default      reduce using rule 87 (Operation)


state 176

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  88) Operation : Expression ">=" Expression _
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  "["           shift, and go to state 80
  "["           [reduce using rule 88 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 88 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 88 (Operation)]
  $default      reduce using rule 88 (Operation)


state 177

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  89) Operation : Expression "<" Expression _
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  "["           shift, and go to state 80
  "["           [reduce using rule 89 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 89 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 89 (Operation)]
  $default      reduce using rule 89 (Operation)


state 178

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  90) Operation : Expression "<=" Expression _
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  "["           shift, and go to state 80
  "["           [reduce using rule 90 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 90 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 90 (Operation)]
  $default      reduce using rule 90 (Operation)


state 179

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  93) Operation : Expression "and" Expression _
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "["           shift, and go to state 80
  "["           [reduce using rule 93 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 93 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 93 (Operation)]
  $default      reduce using rule 93 (Operation)


state 180

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  94) Operation : Expression "or" Expression _
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "["           shift, and go to state 80
  "["           [reduce using rule 94 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 94 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 94 (Operation)]
  $default      reduce using rule 94 (Operation)


state 181

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  95) Operation : Expression "is" Expression _
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "["           shift, and go to state 80
  "["           [reduce using rule 95 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 95 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 95 (Operation)]
  $default      reduce using rule 95 (Operation)


state 182

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  96) Operation : Expression "isnt" Expression _
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "["           shift, and go to state 80
  "["           [reduce using rule 96 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 96 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 96 (Operation)]
  $default      reduce using rule 96 (Operation)


state 183

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
  97) Operation : Expression "=~" Expression _

  "."           shift, and go to state 82
  "."           [reduce using rule 97 (Operation)]
  "**"          shift, and go to state 86
  "**"          [reduce using rule 97 (Operation)]
  "*"           shift, and go to state 85
  "*"           [reduce using rule 97 (Operation)]
  "/"           shift, and go to state 87
  "/"           [reduce using rule 97 (Operation)]
  "%"           shift, and go to state 88
  "%"           [reduce using rule 97 (Operation)]
  "+"           shift, and go to state 83
  "+"           [reduce using rule 97 (Operation)]
  "-"           shift, and go to state 84
  "-"           [reduce using rule 97 (Operation)]
  ">"           shift, and go to state 89
  ">"           [reduce using rule 97 (Operation)]
  "<"           shift, and go to state 91
  "<"           [reduce using rule 97 (Operation)]
  ">="          shift, and go to state 90
  ">="          [reduce using rule 97 (Operation)]
  "<="          shift, and go to state 92
  "<="          [reduce using rule 97 (Operation)]
  "is"          shift, and go to state 95
  "is"          [reduce using rule 97 (Operation)]
  "isnt"        shift, and go to state 96
  "isnt"        [reduce using rule 97 (Operation)]
  "and"         shift, and go to state 93
  "and"         [reduce using rule 97 (Operation)]
  "or"          shift, and go to state 94
  "or"          [reduce using rule 97 (Operation)]
  "["           shift, and go to state 80
  "["           [reduce using rule 97 (Operation)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 97 (Operation)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 97 (Operation)]
  $default      reduce using rule 97 (Operation)


state 184

  29) Expression : "(" Expression ")" _

  $default      reduce using rule 29 (Expression)


state 185

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  78) NamespaceAccess : CONSTANT "::" Expression _
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "."           [reduce using rule 78 (NamespaceAccess)]
  "**"          shift, and go to state 86
  "**"          [reduce using rule 78 (NamespaceAccess)]
  "*"           shift, and go to state 85
  "*"           [reduce using rule 78 (NamespaceAccess)]
  "/"           shift, and go to state 87
  "/"           [reduce using rule 78 (NamespaceAccess)]
  "%"           shift, and go to state 88
  "%"           [reduce using rule 78 (NamespaceAccess)]
  "+"           shift, and go to state 83
  "+"           [reduce using rule 78 (NamespaceAccess)]
  "-"           shift, and go to state 84
  "-"           [reduce using rule 78 (NamespaceAccess)]
  ">"           shift, and go to state 89
  ">"           [reduce using rule 78 (NamespaceAccess)]
  "<"           shift, and go to state 91
  "<"           [reduce using rule 78 (NamespaceAccess)]
  ">="          shift, and go to state 90
  ">="          [reduce using rule 78 (NamespaceAccess)]
  "<="          shift, and go to state 92
  "<="          [reduce using rule 78 (NamespaceAccess)]
  "is"          shift, and go to state 95
  "is"          [reduce using rule 78 (NamespaceAccess)]
  "isnt"        shift, and go to state 96
  "isnt"        [reduce using rule 78 (NamespaceAccess)]
  "and"         shift, and go to state 93
  "and"         [reduce using rule 78 (NamespaceAccess)]
  "or"          shift, and go to state 94
  "or"          [reduce using rule 78 (NamespaceAccess)]
  "["           shift, and go to state 80
  "["           [reduce using rule 78 (NamespaceAccess)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 78 (NamespaceAccess)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 78 (NamespaceAccess)]
  $default      reduce using rule 78 (NamespaceAccess)


state 186

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
  98) OperatorAssignment : CONSTANT "+=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 98 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 98 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 98 (OperatorAssignment)]
  $default      reduce using rule 98 (OperatorAssignment)


state 187

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 103) OperatorAssignment : CONSTANT "-=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 103 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 103 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 103 (OperatorAssignment)]
  $default      reduce using rule 103 (OperatorAssignment)


state 188

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 108) OperatorAssignment : CONSTANT "*=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 108 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 108 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 108 (OperatorAssignment)]
  $default      reduce using rule 108 (OperatorAssignment)


state 189

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 113) OperatorAssignment : CONSTANT "/=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 113 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 113 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 113 (OperatorAssignment)]
  $default      reduce using rule 113 (OperatorAssignment)


state 190

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 118) OperatorAssignment : CONSTANT "%=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 118 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 118 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 118 (OperatorAssignment)]
  $default      reduce using rule 118 (OperatorAssignment)


state 191

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 123) OperatorAssignment : CONSTANT "**=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 123 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 123 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 123 (OperatorAssignment)]
  $default      reduce using rule 123 (OperatorAssignment)


state 192

 131) SetVariable : CONSTANT "=" Literal _

  $default      reduce using rule 131 (SetVariable)


state 193

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
  99) OperatorAssignment : GLOBAL "+=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 99 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 99 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 99 (OperatorAssignment)]
  $default      reduce using rule 99 (OperatorAssignment)


state 194

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 104) OperatorAssignment : GLOBAL "-=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 104 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 104 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 104 (OperatorAssignment)]
  $default      reduce using rule 104 (OperatorAssignment)


state 195

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 109) OperatorAssignment : GLOBAL "*=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 109 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 109 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 109 (OperatorAssignment)]
  $default      reduce using rule 109 (OperatorAssignment)


state 196

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 114) OperatorAssignment : GLOBAL "/=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 114 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 114 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 114 (OperatorAssignment)]
  $default      reduce using rule 114 (OperatorAssignment)


state 197

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 119) OperatorAssignment : GLOBAL "%=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 119 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 119 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 119 (OperatorAssignment)]
  $default      reduce using rule 119 (OperatorAssignment)


state 198

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 124) OperatorAssignment : GLOBAL "**=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 124 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 124 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 124 (OperatorAssignment)]
  $default      reduce using rule 124 (OperatorAssignment)


state 199

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 132) SetVariable : GLOBAL "=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 132 (SetVariable)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 132 (SetVariable)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 132 (SetVariable)]
  $default      reduce using rule 132 (SetVariable)


state 200

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 100) OperatorAssignment : CLASS_IDENTIFIER "+=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 100 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 100 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 100 (OperatorAssignment)]
  $default      reduce using rule 100 (OperatorAssignment)


state 201

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 105) OperatorAssignment : CLASS_IDENTIFIER "-=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 105 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 105 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 105 (OperatorAssignment)]
  $default      reduce using rule 105 (OperatorAssignment)


state 202

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 110) OperatorAssignment : CLASS_IDENTIFIER "*=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 110 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 110 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 110 (OperatorAssignment)]
  $default      reduce using rule 110 (OperatorAssignment)


state 203

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 115) OperatorAssignment : CLASS_IDENTIFIER "/=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 115 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 115 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 115 (OperatorAssignment)]
  $default      reduce using rule 115 (OperatorAssignment)


state 204

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 120) OperatorAssignment : CLASS_IDENTIFIER "%=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 120 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 120 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 120 (OperatorAssignment)]
  $default      reduce using rule 120 (OperatorAssignment)


state 205

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 125) OperatorAssignment : CLASS_IDENTIFIER "**=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 125 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 125 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 125 (OperatorAssignment)]
  $default      reduce using rule 125 (OperatorAssignment)


state 206

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 133) SetVariable : CLASS_IDENTIFIER "=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 133 (SetVariable)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 133 (SetVariable)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 133 (SetVariable)]
  $default      reduce using rule 133 (SetVariable)


state 207

 141) MethodBlock : DO Parameters _ Expressions END
 142) MethodBlock : DO Parameters _ END

  END           shift, and go to state 259
  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Expression    go to state 3
  Expressions   go to state 258
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 208

 162) Parameters : Terminator _

  $default      reduce using rule 162 (Parameters)


state 209

 163) Parameters : "|" _ ParamList "|" Terminator
 164) Parameters : "|" _ ParamList "|"

  CLASS_IDENTIFIER  shift, and go to state 264
  INSTANCE_IDENTIFIER  shift, and go to state 263
  IDENTIFIER    shift, and go to state 262

  ParamList     go to state 260
  Parameter     go to state 261

state 210

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 101) OperatorAssignment : INSTANCE_IDENTIFIER "+=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 101 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 101 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 101 (OperatorAssignment)]
  $default      reduce using rule 101 (OperatorAssignment)


state 211

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 106) OperatorAssignment : INSTANCE_IDENTIFIER "-=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 106 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 106 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 106 (OperatorAssignment)]
  $default      reduce using rule 106 (OperatorAssignment)


state 212

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 111) OperatorAssignment : INSTANCE_IDENTIFIER "*=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 111 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 111 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 111 (OperatorAssignment)]
  $default      reduce using rule 111 (OperatorAssignment)


state 213

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 116) OperatorAssignment : INSTANCE_IDENTIFIER "/=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 116 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 116 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 116 (OperatorAssignment)]
  $default      reduce using rule 116 (OperatorAssignment)


state 214

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 121) OperatorAssignment : INSTANCE_IDENTIFIER "%=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 121 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 121 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 121 (OperatorAssignment)]
  $default      reduce using rule 121 (OperatorAssignment)


state 215

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 126) OperatorAssignment : INSTANCE_IDENTIFIER "**=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 126 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 126 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 126 (OperatorAssignment)]
  $default      reduce using rule 126 (OperatorAssignment)


state 216

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 134) SetVariable : INSTANCE_IDENTIFIER "=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 134 (SetVariable)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 134 (SetVariable)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 134 (SetVariable)]
  $default      reduce using rule 134 (SetVariable)


state 217

  64) Call : IDENTIFIER Arguments Lambda _

  $default      reduce using rule 64 (Call)


state 218

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  74) ArgList : Expression _
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "=>"          shift, and go to state 81
  "=~"          shift, and go to state 97
  $default      reduce using rule 74 (ArgList)


state 219

  72) Arguments : "(" ")" _

  $default      reduce using rule 72 (Arguments)


state 220

  73) Arguments : "(" ArgList _ ")"
  75) ArgList : ArgList _ "," Expression

  ")"           shift, and go to state 265
  ","           shift, and go to state 266


state 221

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 102) OperatorAssignment : IDENTIFIER "+=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 102 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 102 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 102 (OperatorAssignment)]
  $default      reduce using rule 102 (OperatorAssignment)


state 222

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 107) OperatorAssignment : IDENTIFIER "-=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 107 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 107 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 107 (OperatorAssignment)]
  $default      reduce using rule 107 (OperatorAssignment)


state 223

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 112) OperatorAssignment : IDENTIFIER "*=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 112 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 112 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 112 (OperatorAssignment)]
  $default      reduce using rule 112 (OperatorAssignment)


state 224

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 117) OperatorAssignment : IDENTIFIER "/=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 117 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 117 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 117 (OperatorAssignment)]
  $default      reduce using rule 117 (OperatorAssignment)


state 225

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 122) OperatorAssignment : IDENTIFIER "%=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 122 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 122 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 122 (OperatorAssignment)]
  $default      reduce using rule 122 (OperatorAssignment)


state 226

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 127) OperatorAssignment : IDENTIFIER "**=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 127 (OperatorAssignment)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 127 (OperatorAssignment)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 127 (OperatorAssignment)]
  $default      reduce using rule 127 (OperatorAssignment)


state 227

 128) OperatorAssignment : IDENTIFIER ".=" IDENTIFIER _ Arguments Lambda
 129) OperatorAssignment : IDENTIFIER ".=" IDENTIFIER _ Arguments
 130) OperatorAssignment : IDENTIFIER ".=" IDENTIFIER _

  "("           shift, and go to state 133
  $default      reduce using rule 130 (OperatorAssignment)

  Arguments     go to state 267

state 228

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 135) SetVariable : IDENTIFIER "=" Expression _

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 135 (SetVariable)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 135 (SetVariable)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 135 (SetVariable)]
  $default      reduce using rule 135 (SetVariable)


state 229

 139) DefMethod : "[" "]" "=" _ MethodBlock

  DO            shift, and go to state 123

  MethodBlock   go to state 268

state 230

 140) DefMethod : "[" "]" MethodBlock _

  $default      reduce using rule 140 (DefMethod)


state 231

  48) List : "[" Terminator ExpressionList _ "]"
  49) List : "[" Terminator ExpressionList _ Terminator "]"
  52) ExpressionList : ExpressionList _ "," Terminator Expression
  53) ExpressionList : ExpressionList _ Terminator "," Expression
  54) ExpressionList : ExpressionList _ "," Expression

  TERMINATOR    shift, and go to state 5
  "]"           shift, and go to state 269
  ","           shift, and go to state 233

  Terminator    go to state 270

state 232

  50) List : "[" ExpressionList "]" _

  $default      reduce using rule 50 (List)


state 233

  52) ExpressionList : ExpressionList "," _ Terminator Expression
  54) ExpressionList : ExpressionList "," _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 271
  Terminator    go to state 272
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 234

  53) ExpressionList : ExpressionList Terminator _ "," Expression

  ","           shift, and go to state 273


state 235

  76) Lambda : "->" "{" Parameters _ Expressions "}"

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Expression    go to state 3
  Expressions   go to state 274
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 236

  30) GetVariable : CONSTANT _

  $default      reduce using rule 30 (GetVariable)


state 237

  31) GetVariable : GLOBAL _

  $default      reduce using rule 31 (GetVariable)


state 238

  32) GetVariable : CLASS_IDENTIFIER _

  $default      reduce using rule 32 (GetVariable)


state 239

  33) GetVariable : INSTANCE_IDENTIFIER _

  $default      reduce using rule 33 (GetVariable)


state 240

  34) GetVariable : IDENTIFIER _

  $default      reduce using rule 34 (GetVariable)


state 241

  77) Defined : DEFINED "(" GetVariable _ ")"

  ")"           shift, and go to state 275


state 242

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 170) Namespace : NAMESPACE CONSTANT Expressions _ END

  END           shift, and go to state 276
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 79

state 243

   6) Expressions : Terminator _
 171) Namespace : NAMESPACE CONSTANT Terminator _ Expressions END

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 6 (Expressions)]
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61
  $default      reduce using rule 6 (Expressions)

  Expression    go to state 3
  Expressions   go to state 277
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 244

 172) Namespace : NAMESPACE CONSTANT END _

  $default      reduce using rule 172 (Namespace)


state 245

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 173) Class : CLASS CONSTANT Expressions _ END

  END           shift, and go to state 278
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 79

state 246

   6) Expressions : Terminator _
 174) Class : CLASS CONSTANT Terminator _ Expressions END
 176) Class : CLASS CONSTANT Terminator _ END

  END           shift, and go to state 280
  END           [reduce using rule 6 (Expressions)]
  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 6 (Expressions)]
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Expression    go to state 3
  Expressions   go to state 279
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 247

 159) Operator : "<" _
 177) Class : CLASS CONSTANT "<" _ CONSTANT Expressions END
 178) Class : CLASS CONSTANT "<" _ CONSTANT Terminator Expressions END
 179) Class : CLASS CONSTANT "<" _ CONSTANT END
 180) Class : CLASS CONSTANT "<" _ CONSTANT Terminator END

  CONSTANT      shift, and go to state 281
  $default      reduce using rule 159 (Operator)


state 248

 175) Class : CLASS CONSTANT END _

  $default      reduce using rule 175 (Class)


state 249

 181) If : IF Expression Terminator _ Expressions END
 182) If : IF Expression Terminator _ Expressions Else

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Expression    go to state 3
  Expressions   go to state 282
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 250

 188) While : WHILE Expression Terminator _ Expressions END

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Expression    go to state 3
  Expressions   go to state 283
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 251

 193) PropertyList : IDENTIFIER IDENTIFIER _

  $default      reduce using rule 193 (PropertyList)


state 252

 194) PropertyList : PropertyList IDENTIFIER _

  $default      reduce using rule 194 (PropertyList)


state 253

  45) ListExpression : Expression "[" Expression "]" _ "=" Expression
  46) ListExpression : Expression "[" Expression "]" _

  "="           shift, and go to state 284
  $default      reduce using rule 46 (ListExpression)


state 254

  62) AssignmentFunction : Expression "." IDENTIFIER "=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 285
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 255

  66) Call : Expression "." IDENTIFIER Arguments _ Lambda
  67) Call : Expression "." IDENTIFIER Arguments _

  "->"          shift, and go to state 48
  $default      reduce using rule 67 (Call)

  Lambda        go to state 286

state 256

  68) Call : Expression "." IDENTIFIER Lambda _

  $default      reduce using rule 68 (Call)


state 257

  70) Call : Expression "." Operator Arguments _

  $default      reduce using rule 70 (Call)


state 258

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 141) MethodBlock : DO Parameters Expressions _ END

  END           shift, and go to state 287
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 79

state 259

 142) MethodBlock : DO Parameters END _

  $default      reduce using rule 142 (MethodBlock)


state 260

 163) Parameters : "|" ParamList _ "|" Terminator
 164) Parameters : "|" ParamList _ "|"
 166) ParamList : ParamList _ "," Parameter

  ","           shift, and go to state 289
  "|"           shift, and go to state 288


state 261

 165) ParamList : Parameter _

  $default      reduce using rule 165 (ParamList)


state 262

 167) Parameter : IDENTIFIER _

  $default      reduce using rule 167 (Parameter)


state 263

 168) Parameter : INSTANCE_IDENTIFIER _

  $default      reduce using rule 168 (Parameter)


state 264

 169) Parameter : CLASS_IDENTIFIER _

  $default      reduce using rule 169 (Parameter)


state 265

  73) Arguments : "(" ArgList ")" _

  $default      reduce using rule 73 (Arguments)


state 266

  75) ArgList : ArgList "," _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 290
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 267

 128) OperatorAssignment : IDENTIFIER ".=" IDENTIFIER Arguments _ Lambda
 129) OperatorAssignment : IDENTIFIER ".=" IDENTIFIER Arguments _

  "->"          shift, and go to state 48
  $default      reduce using rule 129 (OperatorAssignment)

  Lambda        go to state 291

state 268

 139) DefMethod : "[" "]" "=" MethodBlock _

  $default      reduce using rule 139 (DefMethod)


state 269

  48) List : "[" Terminator ExpressionList "]" _

  $default      reduce using rule 48 (List)


state 270

  49) List : "[" Terminator ExpressionList Terminator _ "]"
  53) ExpressionList : ExpressionList Terminator _ "," Expression

  "]"           shift, and go to state 292
  ","           shift, and go to state 273


state 271

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  54) ExpressionList : ExpressionList "," Expression _
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "=>"          shift, and go to state 81
  "=~"          shift, and go to state 97
  $default      reduce using rule 54 (ExpressionList)


state 272

  52) ExpressionList : ExpressionList "," Terminator _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 293
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 273

  53) ExpressionList : ExpressionList Terminator "," _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 294
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 274

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
  76) Lambda : "->" "{" Parameters Expressions _ "}"

  TERMINATOR    shift, and go to state 5
  "}"           shift, and go to state 295

  Terminator    go to state 79

state 275

  77) Defined : DEFINED "(" GetVariable ")" _

  $default      reduce using rule 77 (Defined)


state 276

 170) Namespace : NAMESPACE CONSTANT Expressions END _

  $default      reduce using rule 170 (Namespace)


state 277

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 171) Namespace : NAMESPACE CONSTANT Terminator Expressions _ END

  END           shift, and go to state 296
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 79

state 278

 173) Class : CLASS CONSTANT Expressions END _

  $default      reduce using rule 173 (Class)


state 279

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 174) Class : CLASS CONSTANT Terminator Expressions _ END

  END           shift, and go to state 297
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 79

state 280

 176) Class : CLASS CONSTANT Terminator END _

  $default      reduce using rule 176 (Class)


state 281

 177) Class : CLASS CONSTANT "<" CONSTANT _ Expressions END
 178) Class : CLASS CONSTANT "<" CONSTANT _ Terminator Expressions END
 179) Class : CLASS CONSTANT "<" CONSTANT _ END
 180) Class : CLASS CONSTANT "<" CONSTANT _ Terminator END

  END           shift, and go to state 300
  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Expression    go to state 3
  Expressions   go to state 298
  Terminator    go to state 299
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 282

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 181) If : IF Expression Terminator Expressions _ END
 182) If : IF Expression Terminator Expressions _ Else

  END           shift, and go to state 301
  ELSE          shift, and go to state 303
  ELSIF         shift, and go to state 305
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 79
  Else          go to state 302
  ElseIf        go to state 304

state 283

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 188) While : WHILE Expression Terminator Expressions _ END

  END           shift, and go to state 306
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 79

state 284

  45) ListExpression : Expression "[" Expression "]" "=" _ Expression

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 307
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 285

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  62) AssignmentFunction : Expression "." IDENTIFIER "=" Expression _
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 62 (AssignmentFunction)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 62 (AssignmentFunction)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 62 (AssignmentFunction)]
  $default      reduce using rule 62 (AssignmentFunction)


state 286

  66) Call : Expression "." IDENTIFIER Arguments Lambda _

  $default      reduce using rule 66 (Call)


state 287

 141) MethodBlock : DO Parameters Expressions END _

  $default      reduce using rule 141 (MethodBlock)


state 288

 163) Parameters : "|" ParamList "|" _ Terminator
 164) Parameters : "|" ParamList "|" _

  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 164 (Parameters)]
  $default      reduce using rule 164 (Parameters)

  Terminator    go to state 308

state 289

 166) ParamList : ParamList "," _ Parameter

  CLASS_IDENTIFIER  shift, and go to state 264
  INSTANCE_IDENTIFIER  shift, and go to state 263
  IDENTIFIER    shift, and go to state 262

  Parameter     go to state 309

state 290

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  75) ArgList : ArgList "," Expression _
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "=>"          shift, and go to state 81
  "=~"          shift, and go to state 97
  $default      reduce using rule 75 (ArgList)


state 291

 128) OperatorAssignment : IDENTIFIER ".=" IDENTIFIER Arguments Lambda _

  $default      reduce using rule 128 (OperatorAssignment)


state 292

  49) List : "[" Terminator ExpressionList Terminator "]" _

  $default      reduce using rule 49 (List)


state 293

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  52) ExpressionList : ExpressionList "," Terminator Expression _
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "=>"          shift, and go to state 81
  "=~"          shift, and go to state 97
  $default      reduce using rule 52 (ExpressionList)


state 294

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  53) ExpressionList : ExpressionList Terminator "," Expression _
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "=>"          shift, and go to state 81
  "=~"          shift, and go to state 97
  $default      reduce using rule 53 (ExpressionList)


state 295

  76) Lambda : "->" "{" Parameters Expressions "}" _

  $default      reduce using rule 76 (Lambda)


state 296

 171) Namespace : NAMESPACE CONSTANT Terminator Expressions END _

  $default      reduce using rule 171 (Namespace)


state 297

 174) Class : CLASS CONSTANT Terminator Expressions END _

  $default      reduce using rule 174 (Class)


state 298

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 177) Class : CLASS CONSTANT "<" CONSTANT Expressions _ END

  END           shift, and go to state 310
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 79

state 299

   6) Expressions : Terminator _
 178) Class : CLASS CONSTANT "<" CONSTANT Terminator _ Expressions END
 180) Class : CLASS CONSTANT "<" CONSTANT Terminator _ END

  END           shift, and go to state 312
  END           [reduce using rule 6 (Expressions)]
  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 6 (Expressions)]
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Expression    go to state 3
  Expressions   go to state 311
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 300

 179) Class : CLASS CONSTANT "<" CONSTANT END _

  $default      reduce using rule 179 (Class)


state 301

 181) If : IF Expression Terminator Expressions END _

  $default      reduce using rule 181 (If)


state 302

 182) If : IF Expression Terminator Expressions Else _

  $default      reduce using rule 182 (If)


state 303

 183) Else : ELSE _ Terminator Expression Terminator END
 184) Else : ELSE _ Terminator Expressions END

  TERMINATOR    shift, and go to state 5

  Terminator    go to state 313

state 304

 185) Else : ElseIf _

  $default      reduce using rule 185 (Else)


state 305

 186) ElseIf : ELSIF _ Expression Terminator Expressions END
 187) ElseIf : ELSIF _ Expression Terminator Expressions Else

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  Expression    go to state 314
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 306

 188) While : WHILE Expression Terminator Expressions END _

  $default      reduce using rule 188 (While)


state 307

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  45) ListExpression : Expression "[" Expression "]" "=" Expression _
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression

  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "["           [reduce using rule 45 (ListExpression)]
  "=>"          shift, and go to state 81
  "=>"          [reduce using rule 45 (ListExpression)]
  "=~"          shift, and go to state 97
  "=~"          [reduce using rule 45 (ListExpression)]
  $default      reduce using rule 45 (ListExpression)


state 308

 163) Parameters : "|" ParamList "|" Terminator _

  $default      reduce using rule 163 (Parameters)


state 309

 166) ParamList : ParamList "," Parameter _

  $default      reduce using rule 166 (ParamList)


state 310

 177) Class : CLASS CONSTANT "<" CONSTANT Expressions END _

  $default      reduce using rule 177 (Class)


state 311

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 178) Class : CLASS CONSTANT "<" CONSTANT Terminator Expressions _ END

  END           shift, and go to state 315
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 79

state 312

 180) Class : CLASS CONSTANT "<" CONSTANT Terminator END _

  $default      reduce using rule 180 (Class)


state 313

 183) Else : ELSE Terminator _ Expression Terminator END
 184) Else : ELSE Terminator _ Expressions END

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Expression    go to state 316
  Expressions   go to state 317
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 314

  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 186) ElseIf : ELSIF Expression _ Terminator Expressions END
 187) ElseIf : ELSIF Expression _ Terminator Expressions Else

  TERMINATOR    shift, and go to state 5
  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "=>"          shift, and go to state 81
  "=~"          shift, and go to state 97

  Terminator    go to state 318

state 315

 178) Class : CLASS CONSTANT "<" CONSTANT Terminator Expressions END _

  $default      reduce using rule 178 (Class)


state 316

   3) Expressions : Expression _
  45) ListExpression : Expression _ "[" Expression "]" "=" Expression
  46) ListExpression : Expression _ "[" Expression "]"
  55) KeyValExpression : Expression _ "=>" Expression
  62) AssignmentFunction : Expression _ "." IDENTIFIER "=" Expression
  66) Call : Expression _ "." IDENTIFIER Arguments Lambda
  67) Call : Expression _ "." IDENTIFIER Arguments
  68) Call : Expression _ "." IDENTIFIER Lambda
  69) Call : Expression _ "." IDENTIFIER
  70) Call : Expression _ "." Operator Arguments
  71) Call : Expression _ "." "not"
  80) Operation : Expression _ "+" Expression
  81) Operation : Expression _ "-" Expression
  83) Operation : Expression _ "*" Expression
  84) Operation : Expression _ "**" Expression
  85) Operation : Expression _ "/" Expression
  86) Operation : Expression _ "%" Expression
  87) Operation : Expression _ ">" Expression
  88) Operation : Expression _ ">=" Expression
  89) Operation : Expression _ "<" Expression
  90) Operation : Expression _ "<=" Expression
  93) Operation : Expression _ "and" Expression
  94) Operation : Expression _ "or" Expression
  95) Operation : Expression _ "is" Expression
  96) Operation : Expression _ "isnt" Expression
  97) Operation : Expression _ "=~" Expression
 183) Else : ELSE Terminator Expression _ Terminator END

  TERMINATOR    shift, and go to state 5
  TERMINATOR    [reduce using rule 3 (Expressions)]
  "."           shift, and go to state 82
  "**"          shift, and go to state 86
  "*"           shift, and go to state 85
  "/"           shift, and go to state 87
  "%"           shift, and go to state 88
  "+"           shift, and go to state 83
  "-"           shift, and go to state 84
  ">"           shift, and go to state 89
  "<"           shift, and go to state 91
  ">="          shift, and go to state 90
  "<="          shift, and go to state 92
  "is"          shift, and go to state 95
  "isnt"        shift, and go to state 96
  "and"         shift, and go to state 93
  "or"          shift, and go to state 94
  "["           shift, and go to state 80
  "=>"          shift, and go to state 81
  "=~"          shift, and go to state 97
  $default      reduce using rule 3 (Expressions)

  Terminator    go to state 319

state 317

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 184) Else : ELSE Terminator Expressions _ END

  END           shift, and go to state 320
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 79

state 318

 186) ElseIf : ELSIF Expression Terminator _ Expressions END
 187) ElseIf : ELSIF Expression Terminator _ Expressions Else

  CLASS         shift, and go to state 72
  IF            shift, and go to state 73
  WHILE         shift, and go to state 74
  NAMESPACE     shift, and go to state 71
  RETURN        shift, and go to state 75
  NEXT          shift, and go to state 10
  TRUE          shift, and go to state 42
  YES           shift, and go to state 43
  ON            shift, and go to state 44
  FALSE         shift, and go to state 45
  NO            shift, and go to state 46
  OFF           shift, and go to state 47
  NIL           shift, and go to state 37
  SELF          shift, and go to state 9
  DEFINED       shift, and go to state 49
  PROPERTY      shift, and go to state 76
  CONSTANT      shift, and go to state 27
  GLOBAL        shift, and go to state 28
  CLASS_IDENTIFIER  shift, and go to state 29
  INSTANCE_IDENTIFIER  shift, and go to state 30
  IDENTIFIER    shift, and go to state 31
  FLOAT         shift, and go to state 33
  NUMBER        shift, and go to state 32
  STRING        shift, and go to state 34
  TERMINATOR    shift, and go to state 5
  REGEX         shift, and go to state 39
  "**"          shift, and go to state 59
  "*"           shift, and go to state 56
  "/"           shift, and go to state 57
  "%"           shift, and go to state 58
  "+"           shift, and go to state 55
  "-"           shift, and go to state 51
  ">"           shift, and go to state 66
  "<"           shift, and go to state 69
  ">="          shift, and go to state 67
  "<="          shift, and go to state 68
  "is"          shift, and go to state 64
  "isnt"        shift, and go to state 65
  "not"         shift, and go to state 53
  "and"         shift, and go to state 62
  "or"          shift, and go to state 63
  "("           shift, and go to state 26
  "["           shift, and go to state 41
  "->"          shift, and go to state 48
  "::"          shift, and go to state 50
  "=~"          shift, and go to state 70
  "[]"          shift, and go to state 60
  "[]="         shift, and go to state 61

  Expression    go to state 3
  Expressions   go to state 321
  Terminator    go to state 4
  Literal       go to state 6
  AssignmentFunction  go to state 7
  Call          go to state 8
  KeyValExpression  go to state 11
  ListExpression  go to state 12
  NamespaceAccess  go to state 13
  Defined       go to state 14
  DefMethod     go to state 15
  Operation     go to state 16
  SetVariable   go to state 17
  GetVariable   go to state 18
  Namespace     go to state 19
  Class         go to state 20
  If            go to state 21
  While         go to state 22
  Return        go to state 23
  Property      go to state 24
  Lambda        go to state 25
  True          go to state 35
  False         go to state 36
  Regex         go to state 38
  List          go to state 40
  OperatorAssignment  go to state 52
  Operator      go to state 54

state 319

 183) Else : ELSE Terminator Expression Terminator _ END

  END           shift, and go to state 322


state 320

 184) Else : ELSE Terminator Expressions END _

  $default      reduce using rule 184 (Else)


state 321

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
 186) ElseIf : ELSIF Expression Terminator Expressions _ END
 187) ElseIf : ELSIF Expression Terminator Expressions _ Else

  END           shift, and go to state 323
  ELSE          shift, and go to state 303
  ELSIF         shift, and go to state 305
  TERMINATOR    shift, and go to state 5

  Terminator    go to state 79
  ElseIf        go to state 304
  Else          go to state 324

state 322

 183) Else : ELSE Terminator Expression Terminator END _

  $default      reduce using rule 183 (Else)


state 323

 186) ElseIf : ELSIF Expression Terminator Expressions END _

  $default      reduce using rule 186 (ElseIf)


state 324

 187) ElseIf : ELSIF Expression Terminator Expressions Else _

  $default      reduce using rule 187 (ElseIf)

